{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/loading-indicator.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/models/infinite-scroll-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/renderer/virtual-tree-freeze-render.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js","../src/treegrid/actions/infinite-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[parseInt(i.toString(), 10)].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[parseInt(i.toString(), 10)]);\n        if (hasChild) {\n            datas.push(records[parseInt(i.toString(), 10)]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords.filter(function (item) { return !item.isSummaryRow; });\n        var keys = Object.keys(childRecords);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            datas.push(childRecords[parseInt(i.toString(), 10)]);\n            if (childRecords[parseInt(i.toString(), 10)].hasChildRecords ||\n                (!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) &&\n                    childRecords[parseInt(i.toString(), 10)].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[parseInt(i.toString(), 10)]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[parseInt(i.toString(), 10)]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[parseInt(j.toString(), 10)]] = array[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[\"\" + idFilter][\"\" + value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[\"\" + id][\"\" + value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[\"\" + addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[parseInt(k.toString(), 10)][\"\" + key]) === 'object') {\n                modifiedData[parseInt(k.toString(), 10)] = modifiedData[parseInt(k.toString(), 10)][\"\" + key];\n            }\n            var keys = modifiedData[parseInt(k.toString(), 10)].taskData ?\n                Object.keys(modifiedData[parseInt(k.toString(), 10)].taskData) :\n                Object.keys(modifiedData[parseInt(k.toString(), 10)]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[parseInt(i.toString(), 10)][\"\" + key] === modifiedData[parseInt(k.toString(), 10)][\"\" + key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[parseInt(i.toString(), 10)];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[\"\" + control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[\"\" + control.idMapping] === currentData_1[\"\" + control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[\"\" + control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[parseInt(p.toString(), 10)][\"\" + control.idMapping] === currentData_1[\"\" + control.idMapping]) {\n                                        if (!control.enableImmutableMode && parentData.childRecords.length === parentData['Children'].length) {\n                                            parentData['childRecords'].splice(p, 1);\n                                        }\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], keys[parseInt(j.toString(), 10)]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[\"\" + changedRecords].length === 0))\n                                    || keys[parseInt(j.toString(), 10)] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[parseInt(k.toString(), 10)].uniqueID);\n                                    treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]] =\n                                        modifiedData[parseInt(k.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[parseInt(j.toString(), 10)]] = editedData[keys[parseInt(j.toString(), 10)]]\n                                            = treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[\"\" + control.parentIdMapping] = treeData[parseInt(i.toString(), 10)][\"\" + control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], control.childMapping)) {\n                                        treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping] = [];\n                                    }\n                                    treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping])) {\n                    if (removeChildRecords(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping], modifiedData[parseInt(k.toString(), 10)], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[parseInt(addRowIndex.toString(), 10)];\n                if (!isNullOrUndefined(currentdata) && currentdata[\"\" + primaryKeys] === details.value[\"\" + primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[\"\" + internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[parseInt(j.toString(), 10)][\"\" + key] === modifiedData[\"\" + key] ||\n            (isSelfReference && childRecords[parseInt(j.toString(), 10)][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], keys[parseInt(i.toString(), 10)]) &&\n                        (control.editSettings.mode !== 'Cell' || keys[parseInt(i.toString(), 10)] === columnName)) {\n                        editedData[keys[parseInt(i.toString(), 10)]] =\n                            editedData.taskData[keys[parseInt(i.toString(), 10)]] =\n                                childRecords[parseInt(j.toString(), 10)][keys[parseInt(i.toString(), 10)]] =\n                                    modifiedData[keys[parseInt(i.toString(), 10)]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[\"\" + editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[\"\" + editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[\"\" + control.parentIdMapping] = childRecords[parseInt(j.toString(), 10)][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], control.childMapping)) {\n                            childRecords[parseInt(j.toString(), 10)][control.childMapping] = [];\n                        }\n                        childRecords[parseInt(j.toString(), 10)][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[parseInt(j.toString(), 10)][control.childMapping])) {\n            if (removeChildRecords(childRecords[parseInt(j.toString(), 10)][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[\"\" + key] === record[\"\" + key]) {\n            index_1 = i;\n            return;\n        } });\n        if (control.enableVirtualization && isNullOrUndefined(index_1)) {\n            var updatedParent = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n            record = updatedParent;\n        }\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[parseInt(index_1.toString(), 10)];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[\"\" + key] !== child[\"\" + key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[\"\" + control.childMapping].indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[parseInt(i.toString(), 10)][\"\" + primaryKeys] === record[\"\" + primaryKeys]) {\n                data[parseInt(i.toString(), 10)] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            if (action === 'add') {\n                row = control.getRows()[control.grid.getCurrentViewRecords().indexOf(record)];\n            }\n            else {\n                row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[\"\" + key])];\n            }\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[parseInt(index_2.toString(), 10)] ? row.cells[parseInt(index_2.toString(), 10)]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n            if (control.enableImmutableMode && control['action'] === 'indenting' || control['action'] === 'outdenting') {\n                control.renderModule.RowModifier({\n                    data: record, row: row\n                });\n            }\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[parseInt(i.toString(), 10)]] = column[keys[parseInt(i.toString(), 10)]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[parseInt(i.toString(), 10)] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'].renderModule[\"\" + refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the Loading Indicator of the Tree Grid.\n */\nvar LoadingIndicator = /** @class */ (function (_super) {\n    __extends(LoadingIndicator, _super);\n    function LoadingIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Spinner')\n    ], LoadingIndicator.prototype, \"indicatorType\", void 0);\n    return LoadingIndicator;\n}(ChildProperty));\nexport { LoadingIndicator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[parseInt(i.toString(), 10)] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[parseInt(i.toString(), 10)] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'primary_column_missing' || type[parseInt(i.toString(), 10)] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[parseInt(i.toString(), 10)] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var headerContent = 'e-headercontent';\n/** @hidden */\nexport var movableContent = 'e-movablecontent';\n/** @hidden */\nexport var movableHeader = 'e-movableheader';\n/** @hidden */\nexport var frozenContent = 'e-frozencontent';\n/** @hidden */\nexport var frozenHeader = 'e-frozenheader';\n/** @hidden */\nexport var content = 'e-content';\n/** @hidden */\nexport var table = 'e-table';\n/** @hidden */\nexport var leftRight = 'Left-Right';\n/** @hidden */\nexport var frozenRight = 'frozen-right';\n/** @hidden */\nexport var frozenLeft = 'frozen-left';\n/** @hidden */\nexport var dataColIndex = 'data-colindex';\n/** @hidden */\nexport var ariaColIndex = 'aria-colindex';\n/** @hidden */\nexport var dataRowIndex = 'data-rowindex';\n/** @hidden */\nexport var ariaRowIndex = 'aria-rowindex';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent, serviceLocator) {\n        var _this = _super.call(this, parent.grid, serviceLocator) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        _this.serviceLocator = serviceLocator;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[\"\" + copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[parseInt(i.toString(), 10)]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[parseInt(i.toString(), 10)]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[parseInt(i.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader, i);\n                            }\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[\"\" + copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[parseInt(i.toString(), 10)] =\n                            this.treeGridParent.getVisibleColumns()[parseInt(i.toString(), 10)].headerText;\n                    }\n                    this[\"\" + getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[\"\" + copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[\"\" + isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem])) {\n            var treeLevel = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem]) &&\n                        currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[parseInt(selectedIndex.toString(), 10)].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[\"\" + copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + hasChildRecords]) {\n            var childData = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) && currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) {\n                        if ((!isNullOrUndefined(rows[parseInt(j.toString(), 10)])) && !rows[parseInt(j.toString(), 10)].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[parseInt(j.toString(), 10)].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[\"\" + copyContent]);\n                                this[\"\" + copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.searchingRecords = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[\"\" + stackedHeader] ? this.parent[\"\" + columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[parseInt(col.toString(), 10)].showCheckbox) {\n                mappingUid = columns[parseInt(col.toString(), 10)].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[parseInt(j.toString(), 10)];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox', 'aria-label': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[parseInt(i.toString(), 10)]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[parseInt(j.toString(), 10)])) {\n                    flatRecord[keys[parseInt(j.toString(), 10)]] = record[keys[parseInt(j.toString(), 10)]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[parseInt(count.toString(), 10)].isSummaryRow) {\n                    if (childRecords[parseInt(count.toString(), 10)].hasChildRecords) {\n                        this.traverSelection(childRecords[parseInt(count.toString(), 10)], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[parseInt(count.toString(), 10)], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[parseInt(i.toString(), 10)].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        //This property used to maintain the check state of the currentview data after clear filtering\n        var multiFilterCheckState = false;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            if (this.parent.grid.searchSettings.key.length) {\n                this.searchingRecords = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                    multiFilterCheckState = true;\n                }\n                else {\n                    multiFilterCheckState = false;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length && !this.parent.grid.searchSettings.key.length) {\n                this.filteredList = [];\n            }\n            if (this.searchingRecords.length && !isNullOrUndefined(checkAll)) {\n                this.filteredList = this.searchingRecords;\n            }\n        }\n        var data;\n        if (!(isNullOrUndefined(this.parent.filterModule)) &&\n            this.parent.filterModule.filteredResult.length === 0 && this.parent.getCurrentViewRecords().length === 0 &&\n            this.parent.filterSettings.columns.length > 0) {\n            data = this.filteredList;\n        }\n        else {\n            data = (!isNullOrUndefined(this.parent.filterModule) &&\n                (this.filteredList.length > 0)) ? this.filteredList : this.parent.flatData;\n        }\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[parseInt(i.toString(), 10)].checkboxState === 'check') {\n                        continue;\n                    }\n                    if (multiFilterCheckState) {\n                        continue;\n                    }\n                    data[parseInt(i.toString(), 10)].checkboxState = 'check';\n                    this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[parseInt(i.toString(), 10)]);\n                    if (index > -1) {\n                        data[parseInt(i.toString(), 10)].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var tr = this.parent.getRows()[parseInt(recordIndex.toString(), 10)];\n        var checkbox;\n        if (recordIndex > -1) {\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[parseInt(recordIndex.toString(), 10)];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n                var chkstate = checkState === 'check' ? 'checked' : checkState === 'uncheck' ? 'unchecked' : 'mixed';\n                tr.querySelector('.e-treecheckselect').setAttribute('aria-checked', checkState === 'check' ? 'true' : checkState === 'uncheck' ? 'false' : 'mixed');\n                tr.querySelector('.e-frame').setAttribute('title', 'checkbox' + chkstate);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[parseInt(i.toString(), 10)], childData[parseInt(i.toString(), 10)].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[parseInt(i.toString(), 10)]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[parseInt(i.toString(), 10)], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[parseInt(i.toString(), 10)].parentItem)) {\n                            this.updateParentSelection(updatedData[parseInt(i.toString(), 10)].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords && record.childRecords.length > 0) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[parseInt(i.toString(), 10)].hasChildRecords) {\n                                    _this.updateParentSelection(child[parseInt(i.toString(), 10)]);\n                                }\n                                else if (!(child[parseInt(i.toString(), 10)].hasChildRecords) &&\n                                    !isNullOrUndefined(child[parseInt(i.toString(), 10)])) {\n                                    _this.updateSelectedItems(child[parseInt(i.toString(), 10)], child[parseInt(i.toString(), 10)].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend, CellRenderer } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed && !isNullOrUndefined(args.row)) {\n                args.row.style.display = 'none';\n                var rowsObj = this.parent.grid.getRowsObject();\n                if (!isNullOrUndefined(args.row.getAttribute('data-uid'))) {\n                    rowsObj.filter(function (e) { return e.uid === args.row.getAttribute('data-uid'); })[0].visible = false;\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0 && !parentrec[0].isSummaryRow && !isNullOrUndefined(args.row)) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (!isNullOrUndefined(args.row)) {\n            if (args.row.querySelector('.e-treegridexpand')) {\n                args.row.setAttribute('aria-expanded', 'true');\n            }\n            else if (args.row.querySelector('.e-treegridcollapse')) {\n                args.row.setAttribute('aria-expanded', 'false');\n            }\n            if (this.parent.enableCollapseAll && this.parent.initialRender) {\n                if (!isNullOrUndefined(data.parentItem)) {\n                    args.row.style.display = 'none';\n                }\n            }\n        }\n        var dragStartData = 'dragStartData';\n        var draggedRecord = 'draggedRecord';\n        if (this.parent.rowDragAndDropModule && this.parent.grid.rowDragAndDropModule && (this.parent.grid.rowDragAndDropModule[\"\" + dragStartData] ||\n            this.parent.rowDragAndDropModule[\"\" + draggedRecord]) && this.parent.getContentTable().scrollHeight <= this.parent.getContent().clientHeight) {\n            var lastRowBorder = 'lastRowBorder';\n            var lastVisualData = this.parent.getVisibleRecords()[this.parent.getVisibleRecords().length - 1];\n            if (lastVisualData.uniqueID === args.data.uniqueID && !isNullOrUndefined(args.row) && !args.row.cells[0].classList.contains('e-lastrowcell')) {\n                this.parent[\"\" + lastRowBorder](args.row, true);\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[\"\" + getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                args.cell.setAttribute('aria-expanded', data.expanded ? 'true' : 'false');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '4px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                if (args.column.template) {\n                    args.cell.innerHTML = null;\n                }\n                else {\n                    args.cell.innerHTML = summaryData;\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('data-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[\"\" + templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[\"\" + templateFn](args.data, this.parent, 'columnTemplate', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[\"\" + portals])) {\n                        this.parent.grid[\"\" + portals] = this.parent[\"\" + portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n                    this.parent[\"\" + renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[\"\" + templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[\"\" + str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[\"\" + templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.parent.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.parent.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.parent.grid.getRowsObject();\n                var indent = _this.parent.grid.getIndentCount();\n                var cellIndex = _this.parent.grid.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[parseInt(j.toString(), 10)].isDataRow && !isNullOrUndefined(rowsObj[parseInt(j.toString(), 10)].index)) {\n                        var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n                        var cellRenderer = new CellRenderer(_this.parent.grid, _this.parent.grid.serviceLocator);\n                        var td = _this.parent.getCellFromIndex(rowsObj[parseInt(j.toString(), 10)].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[parseInt(j.toString(), 10)].data, { index: rowsObj[parseInt(j.toString(), 10)][\"\" + rowIdx] });\n                        var treecell = _this.parent.getRows()[parseInt(j.toString(), 10)]\n                            .cells[parseInt(cellIndex.toString(), 10)];\n                        _this.cellRender({ data: rowsObj[parseInt(j.toString(), 10)].data, cell: treecell, column: cell.column });\n                    }\n                }\n            });\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[\"\" + portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n        this.parent[\"\" + renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            var keys = Object.keys(data);\n            for (var i = 0; i < keys.length; i++) {\n                var tempData = data[parseInt(i.toString(), 10)];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[parseInt(i.toString(), 10)];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[parseInt(index.toString(), 10)][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[\"\" + isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var actionArgs = 'actionArgs';\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && args[\"\" + actionArgs].requestType === 'virtualscroll') {\n            this.parent.hideSpinner();\n        }\n        var records = args.result;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && (args[\"\" + actionArgs].requestType === 'virtualscroll' || args[\"\" + actionArgs].action === 'clearFilter' || args[\"\" + actionArgs].searchString === '')) {\n            this.parent.query.expands = [];\n        }\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                var _loop_1 = function (rec) {\n                    if (isCountRequired(this_1.parent) && records[parseInt(rec.toString(), 10)].hasChildRecords &&\n                        this_1.parent.initialRender) {\n                        records[parseInt(rec.toString(), 10)].expanded = false;\n                    }\n                    if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization) {\n                        var childRecords_1 = [];\n                        var parent_1 = this_1.parent;\n                        records.filter(function (e) {\n                            if (e[\"\" + parent_1.parentIdMapping] === records[parseInt(rec.toString(), 10)][\"\" + parent_1.idMapping]) {\n                                childRecords_1.push(e);\n                            }\n                        });\n                        if (childRecords_1.length) {\n                            records[parseInt(rec.toString(), 10)].expanded = true;\n                        }\n                        else if (records[parseInt(rec.toString(), 10)].hasChildRecords) {\n                            records[parseInt(rec.toString(), 10)].expanded = false;\n                        }\n                    }\n                    if (isNullOrUndefined(records[parseInt(rec.toString(), 10)].index)) {\n                        records[parseInt(rec.toString(), 10)].taskData = extend({}, records[parseInt(rec.toString(), 10)]);\n                        records[parseInt(rec.toString(), 10)].uniqueID = getUid(this_1.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[parseInt(rec.toString(), 10)].uniqueID, records[parseInt(rec.toString(), 10)], this_1.parent);\n                        records[parseInt(rec.toString(), 10)].level = 0;\n                        if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization && records[parseInt(rec.toString(), 10)][\"\" + this_1.parent.parentIdMapping] && records[parseInt(rec.toString(), 10)].level === 0) {\n                            records[parseInt(rec.toString(), 10)].level = records[parseInt(rec.toString(), 10)].level + 1;\n                        }\n                        records[parseInt(rec.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        if ((records[parseInt(rec.toString(), 10)][this_1.parent.hasChildMapping] ||\n                            this_1.parentItems.indexOf(records[parseInt(rec.toString(), 10)][this_1.parent.idMapping]) !== -1)) {\n                            records[parseInt(rec.toString(), 10)].hasChildRecords = true;\n                        }\n                        records[parseInt(rec.toString(), 10)].checkboxState = 'uncheck';\n                    }\n                };\n                var this_1 = this;\n                for (var rec = 0; rec < records.length; rec++) {\n                    _loop_1(rec);\n                }\n            }\n            else {\n                var dataResults = 'dataResults';\n                var expandRecord = 'expandRecord';\n                if (!isNullOrUndefined(records) && !((this.parent.loadChildOnDemand) && isCountRequired(this.parent) && !isNullOrUndefined(this.parent[\"\" + dataResults][\"\" + expandRecord])) &&\n                    !(isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization) {\n            args.result = records;\n        }\n        else if (isRemoteData(this.parent) && this.parent.enableVirtualization && !this.parent.loadChildOnDemand) {\n            args.result = records;\n        }\n        else {\n            args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        }\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && this.parent.loadChildOnDemand\n            && this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var query = 'query';\n            var summaryQuery = args[\"\" + query].queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            args.result = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        var name = 'name';\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[parseInt(i.toString(), 10)].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[parseInt(i.toString(), 10)].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ?\n                        this.parent.grid.getCurrentViewRecords()[rowDetails.rows[parseInt(i.toString(), 10)].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ action: rowDetails[\"\" + name], record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        if (this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n            qry.take(this.parent.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('ExpandingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        else if (this.parent.enableVirtualization && rowDetails.action === 'collapse') {\n            qry.take(this.parent.grid.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('CollapsingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var remoteExpandedData = 'remoteExpandedData';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            var level = 'level';\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (_this.parent.enableVirtualization && (rowDetails.action === 'collapse' || rowDetails.action === 'remoteExpand')) {\n                datas = [];\n                for (var i = 0; i < inx; i++) {\n                    datas.push(_this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                }\n            }\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'remoteExpand') {\n                    _this.parent[\"\" + remoteExpandedData].push(rowDetails.record);\n                }\n                else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'collapse') {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            _this.parent[\"\" + remoteExpandedData].splice(i, 1);\n                        }\n                    }\n                }\n                result[parseInt(r.toString(), 10)].taskData = extend({}, result[parseInt(r.toString(), 10)]);\n                if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] && _this.parent.enableVirtualization && _this.parent[\"\" + remoteExpandedData].length) {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + level] + 1;\n                            var parentData = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)];\n                            result[parseInt(r.toString(), 10)].parentItem = parentData;\n                            result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                        }\n                    }\n                }\n                else if (_this.parent.enableVirtualization) {\n                    if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                        _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                        if (isNullOrUndefined(result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping])) {\n                            result[parseInt(r.toString(), 10)].level = 0;\n                        }\n                        else {\n                            result[parseInt(r.toString(), 10)].level = rowDetails.record.level;\n                        }\n                    }\n                    else {\n                        var parentData = extend({}, rowDetails.record);\n                        delete parentData.childRecords;\n                        result[parseInt(r.toString(), 10)].parentItem = parentData;\n                        result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                    }\n                }\n                else {\n                    result[parseInt(r.toString(), 10)].level = rowDetails.record.level + 1;\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[parseInt(r.toString(), 10)].parentItem = parentData;\n                    result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                }\n                result[parseInt(r.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                result[parseInt(r.toString(), 10)].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[parseInt(r.toString(), 10)].checkboxState = 'uncheck';\n                if (_this.parent.enableVirtualization && isNullOrUndefined(result[parseInt(r.toString(), 10)].level)) {\n                    for (var p = 0; p < _this.parent.grid.currentViewData.length; p++) {\n                        if (_this.parent.grid.currentViewData[parseInt(p.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent.grid.currentViewData[parseInt(p.toString(), 10)]['level'] + 1;\n                        }\n                    }\n                }\n                setValue('uniqueIDCollection.' + result[parseInt(r.toString(), 10)].uniqueID, result[parseInt(r.toString(), 10)], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                    _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                    result[parseInt(r.toString(), 10)].hasChildRecords = true;\n                    if (_this.parent.enableVirtualization && _this.parent.loadChildOnDemand) {\n                        for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                            if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                result[parseInt(r.toString(), 10)].expanded = _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)]['expanded'];\n                            }\n                        }\n                        if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] !== rowDetails.record[\"\" + _this.parent.idMapping] && result[parseInt(r.toString(), 10)].expanded !== false) {\n                            result[parseInt(r.toString(), 10)].expanded = true;\n                        }\n                        else if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].expanded = false;\n                            _this.parent[\"\" + remoteCollapsedData].push(rowDetails.record);\n                        }\n                        else if (rowDetails.action === 'remoteExpand') {\n                            for (var i = 0; i < _this.parent.grid.currentViewData.length; i++) {\n                                if (_this.parent.grid.currentViewData[parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                    result.splice(r, 1, _this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)][_this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                                for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                                    if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                        _this.parent[\"\" + remoteCollapsedData].splice(i, 1);\n                                    }\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)].expanded !== false) {\n                                result[parseInt(r.toString(), 10)].expanded = true;\n                            }\n                        }\n                    }\n                    else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action !== 'collapse') {\n                        result[parseInt(r.toString(), 10)].expanded = true;\n                    }\n                    else if (!(_this.parent.enableVirtualization && _this.parent.loadChildOnDemand)) {\n                        result[parseInt(r.toString(), 10)].expanded = false;\n                    }\n                }\n                datas.splice(inx + r + 1, 0, result[parseInt(r.toString(), 10)]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[\"\" + result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[\"\" + result_1], true);\n                }\n            }\n            if (_this.parent.enableVirtualization) {\n                _this.parent.grid.pageSettings.totalRecordsCount = e.count;\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization) {\n            var index = this.parent.query.queries.indexOf(this.parent.query.queries.filter(function (q) { return q.fn === 'onSortBy'; })[0]);\n            if (index !== -1) {\n                this.parent.query.queries.splice(index, 1);\n            }\n            if (this.parent.grid.sortSettings.columns.length === 0) {\n                this.parent.query.sortBy(null, null);\n            }\n        }\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        var keys = Object.keys(data);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var currentData = extend({}, data[parseInt(i.toString(), 10)]);\n            currentData.taskData = data[parseInt(i.toString(), 10)];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if ((!isNullOrUndefined(currentData[this.parent.childMapping]) && !isCountRequired(this.parent)) ||\n                ((currentData[this.parent.hasChildMapping]) && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            if (this.parent.enableVirtualization && this.parent.loadChildOnDemand && isRemoteData(this.parent)\n                && !this.parent.initialRender) {\n                if (!currentData.hasChildRecords && isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping])) {\n                    currentData.hasChildRecords = true;\n                    for (var c = 0; c < this.parent[\"\" + remoteCollapsedData].length; c++) {\n                        if (this.parent[\"\" + remoteCollapsedData][parseInt(c.toString(), 10)][\"\" + this.parent.idMapping] === currentData[\"\" + this.parent.idMapping]) {\n                            currentData.expanded = false;\n                        }\n                    }\n                }\n                else if (currentData.level === 0 && isNullOrUndefined(parentRecords) && !currentData.hasChildRecords) {\n                    currentData.level = currentData.level + 1;\n                }\n                if (currentData[\"\" + this.parent.hasChildMapping] && !isNullOrUndefined(currentData[\"\" + this.parent.expandStateMapping])) {\n                    currentData.expanded = currentData[\"\" + this.parent.expandStateMapping];\n                    currentData.hasChildRecords = true;\n                }\n                this.parent.flatData.push(currentData);\n            }\n            else if (isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n                this.parent['infiniteScrollData'].push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[\"\" + primaryKeyColumnName])) {\n            actionAddArgs.data[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n            dataValue.taskData[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[\"\" + getColumnByField](this.parent.grid.\n                    sortSettings.columns[parseInt(srt.toString(), 10)].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            if (this.parent.allowRowDragAndDrop && !isNullOrUndefined(this.parent.rowDragAndDropModule['draggedRecord']) &&\n                this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                var dragdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                modifiedData.splice(dragdIndex, 1);\n                var dropdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                if (this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                    modifiedData.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n                else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                    modifiedData.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n            }\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[\"\" + isPdfExport] && (isNullOrUndefined(args[\"\" + isCollapsedStatePersist])\n            || args[\"\" + isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[parseInt(i.toString(), 10)], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[parseInt(i.toString(), 10)]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n    ContextMenuItems[ContextMenuItems[\"RowIndent\"] = 16] = \"RowIndent\";\n    ContextMenuItems[ContextMenuItems[\"RowOutdent\"] = 17] = \"RowOutdent\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend, merge, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { LoadingIndicator } from '../models/loading-indicator';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\nimport * as literals from '../base/constant';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.indentOutdentAction = 'indentOutdentAction';\n        _this.modifiedRecords = [];\n        _this.stackedHeader = false;\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[parseInt(i.toString(), 10)]] !== current[keys[parseInt(i.toString(), 10)]] &&\n                        excludeKeys.indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                        var isDate = old[keys[parseInt(i.toString(), 10)]] instanceof Date &&\n                            current[keys[parseInt(i.toString(), 10)]] instanceof Date;\n                        if (!isDate || (old[keys[parseInt(i.toString(), 10)]].getTime() !==\n                            current[keys[parseInt(i.toString(), 10)]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[\"\" + logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridexpand')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                        }\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridcollapse')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                        }\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[parseInt(cellIndex.toString(), 10)];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[parseInt(cIndex.toString(), 10)];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.infiniteScrollData = [];\n        this.remoteCollapsedData = [];\n        this.remoteExpandedData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[\"\" + splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        var freezePresent = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'freeze';\n        });\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount() || freezePresent.length) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        var IsRowDDInjected = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'rowDragAndDrop';\n        });\n        if (this.allowRowDragAndDrop || IsRowDDInjected.length) {\n            if ((!isNullOrUndefined(this.toolbar) && (this.toolbar['includes']('Indent') ||\n                this.toolbar['includes']('Outdent')))) {\n                this.isIndentEnabled = true;\n            }\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        if (this.isVue) {\n            this.grid.isVue = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.grid.vueInstance = this.vueInstance;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[parseInt(i.toString(), 10)].member === 'virtualscroll') {\n                    modules[parseInt(i.toString(), 10)].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        var root = 'root';\n        this.grid[\"\" + root] = this[\"\" + root] ? this[\"\" + root] : this;\n        this.grid.appendTo(gridContainer);\n        if (this.isIndentEnabled) {\n            this.refreshToolbarItems();\n        }\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[\"\" + destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[\"\" + destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[\"\" + portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.refreshToolbarItems = function () {\n        var toolbarElement = this.toolbarModule.getToolbar();\n        var indentID = this.element.id + '_gridcontrol_indent';\n        var outdentID = this.element.id + '_gridcontrol_outdent';\n        var indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n        var outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n        indentElement.classList.add('e-hidden');\n        outdentElement.classList.add('e-hidden');\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this, this.grid.serviceLocator);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.enableVirtualMaskRow = this.enableVirtualMaskRow;\n        this.grid.loadingIndicator = this.loadingIndicator;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[\"\" + templateInstance] = this[\"\" + templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[\"\" + isJsComponent] = true;\n        var enableHtmlSanitizer = 'enableHtmlSanitizer';\n        this.grid[\"\" + enableHtmlSanitizer] = this.enableHtmlSanitizer;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.IsExpandCollapseClicked = function (args) {\n        if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))\n            && (!isNullOrUndefined(args.data) && args.data['hasChildRecords']) && !this.selectionSettings.checkboxOnly) {\n            args.cancel = true;\n            return;\n        }\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowDeselecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[parseInt(i.toString(), 10)].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(i.toString(), 10)], _this.getCurrentViewRecords()[parseInt(i.toString(), 10)].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (!isNullOrUndefined(args.data)) {\n                _this.notify(events.rowDeselected, args);\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[\"\" + rowIndex]].classList.contains('e-summaryrow')) {\n                args[\"\" + rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[\"\" + loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        if (totalRows[parseInt(i.toString(), 10)].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[\"\" + action] === 'expand' || _this.dataResults[\"\" + action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[\"\" + refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(index.toString(), 10)], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[\"\" + dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var actualTarget = 'actualTarget';\n            var target = _this.grid.selectionModule[\"\" + actualTarget];\n            if (!isNullOrUndefined(target) && (target.classList.contains('e-treegridexpand') || target.classList.contains('e-treegridcollapse'))) {\n                args.cancel = true;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                if (args.action.requestType !== 'infiniteScroll') {\n                    _this.infiniteScrollData = [];\n                }\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[\"\" + prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        var _this = this;\n        if (this.rowTemplate) {\n            if (this.isReact && this.getContentTable().rows.length === 0) {\n                setTimeout(function () {\n                    _this.treeColumnRowTemplate();\n                    if (_this.enableCollapseAll) {\n                        var currentData = _this.getCurrentViewRecords();\n                        var rows = _this.getContentTable().rows;\n                        for (var i = 0; i < rows.length; i++) {\n                            var args = { data: currentData[parseInt(i.toString(), 10)], row: rows[parseInt(i.toString(), 10)] };\n                            _this.renderModule.RowModifier(args);\n                        }\n                    }\n                }, 0);\n            }\n            else {\n                this.treeColumnRowTemplate();\n            }\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[\"\" + dataSource].json = extendArray(this.dataSource[\"\" + dataSource].json);\n            this.grid.dataSource[\"\" + ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[\"\" + ready])) {\n                this.grid.dataSource[\"\" + ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[\"\" + dataSource].offline = true;\n                    dm[\"\" + isDataAvailable] = true;\n                    dm[\"\" + dataSource].json = e.result;\n                    dm[\"\" + adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (isRemoteData(_this) && _this.enableVirtualization) {\n                if (args.requestType === 'virtualscroll') {\n                    _this.query.expand('VirtualScrollingAction');\n                    _this.showSpinner();\n                }\n                else if (args.requestType === 'searching' && args.searchString === '') {\n                    _this.query.expand('ClearSearchingAction');\n                }\n                else if (args.action === 'clearFilter') {\n                    _this.query.expand('ClearFilteringAction');\n                }\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 && _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            if (_this.action !== 'indenting' && _this.action !== 'outdenting') {\n                var callBackPromise_2 = new Deferred();\n                _this.trigger(events.actionBegin, args, function (actionArgs) {\n                    if (!actionArgs.cancel) {\n                        _this.notify(events.beginEdit, actionArgs);\n                    }\n                    callBackPromise_2.resolve(actionArgs);\n                });\n                return callBackPromise_2;\n            }\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            if (args.action === 'filter') {\n                if (_this.filterModule['currentFilterObject'] !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.requestType === 'searching') {\n                if (_this.searchSettings.key !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.action === 'clearFilter' && _this.enableCollapseAll) {\n                _this.collapseAll();\n            }\n            if (_this.action === 'indenting' || _this.action === 'outdenting') {\n                _this.action = _this.action === 'indenting' ? 'indented' : 'outdented';\n                var selectedItem_1 = [_this.selectedRecords];\n                var actionArgs = {\n                    data: selectedItem_1,\n                    dropIndex: _this.dropIndex,\n                    dropPosition: _this.dropPosition,\n                    modifiedRecords: _this.modifiedRecords,\n                    requestType: _this.action,\n                    row: _this.selectedRows\n                };\n                _this.trigger(events.actionComplete, actionArgs);\n                var currentPageItem = _this.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === selectedItem_1[0].uniqueID;\n                });\n                if (!currentPageItem.length) {\n                    _this.refreshToolbarItems();\n                }\n                _this.action = '';\n                _this.selectedRecords = _this.selectedRows = _this.modifiedRecords = [];\n            }\n            else {\n                if (_this.grid.isFrozenGrid() && _this.enableVirtualization && args['tableName'] === 'movable') {\n                    var movableContent = _this.grid.element.querySelector('.' + literals.movableContent);\n                    var frozenContent = _this.grid.element.querySelector('.' + literals.frozenContent);\n                    movableContent.style.height = frozenContent.style.height = 'auto';\n                }\n                _this.trigger(events.actionComplete, args);\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[\"\" + ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                    this.columns.push(keys[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[\"\" + guid] = this.editSettings[\"\" + guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[parseInt(i.toString(), 10)]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    case 'Indent':\n                    case ContextMenuItems.RowIndent:\n                        items.push({ text: this.l10n.getConstant('RowIndent'),\n                            target: '.e-content', iconCss: 'e-indent e-icons', id: this.element.id + '_gridcontrol_cmenu_Indent' });\n                        break;\n                    case 'Outdent':\n                    case ContextMenuItems.RowOutdent:\n                        items.push({ text: this.l10n.getConstant('RowOutdent'),\n                            target: '.e-content', iconCss: 'e-outdent e-icons', id: this.element.id + '_gridcontrol_cmenu_Outdent' });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[parseInt(i.toString(), 10)]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        if (this.columnModel.length === 0) {\n            index = index === 0 ? -1 : index;\n        }\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[parseInt(i.toString(), 10)].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[parseInt(i.toString(), 10)] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[parseInt(i.toString(), 10)];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[parseInt(i.toString(), 10)][\"\" + prop])) {\n                        gridColumn[\"\" + prop] = this.getGridColumns(column[parseInt(i.toString(), 10)][\"\" + prop], false, this.columnModel.length - 1);\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (this.initialRender && !isNullOrUndefined(treeColumn) && this.enablePersistence && prop === 'edit') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = treeColumn[\"\" + prop];\n                    }\n                    else if (!(treeColumn) || prop !== 'sortComparer') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[\"\" + stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n            if (!isNullOrUndefined(this.columnModel[this.treeColumnIndex]) && this.enableRtl) {\n                if (gridColumn.field === this.columnModel[this.treeColumnIndex].field) {\n                    if (isNullOrUndefined(this.treeColumnTextAlign)) {\n                        this.treeColumnTextAlign = this.columnModel[this.treeColumnIndex].textAlign;\n                        this.treeColumnField = this.columnModel[this.treeColumnIndex].field;\n                    }\n                    gridColumn.textAlign = 'Right';\n                }\n            }\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[\"\" + prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    this.TreeGridLocale();\n                    this.grid.toolbar = this.getGridToolbar();\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    if (!isNullOrUndefined(this.treeColumnField)) {\n                        this.updateTreeColumnTextAlign();\n                    }\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[\"\" + prop].mode &&\n                        (newProp[\"\" + prop].mode === 'Cell' || newProp[\"\" + prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    TreeGrid.prototype.updateTreeColumnTextAlign = function () {\n        var gridColumn = this.grid.getColumnByField(this.treeColumnField);\n        gridColumn.textAlign = this.enableRtl ? 'Right' : this.treeColumnTextAlign;\n        this.grid.refreshColumns();\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[parseInt(i.toString(), 10)]]) {\n                this[modules[parseInt(i.toString(), 10)]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[parseInt(k.toString(), 10)];\n                delete currentObject[\"\" + objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n                this.ignoreInArrays(ignoreOnColumn, columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[parseInt(i.toString(), 10)]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[\"\" + isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[\"\" + primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n        var visibleRecords = this.getVisibleRecords();\n        if (visibleRecords.length > 0 && key === (visibleRecords[visibleRecords.length - 1])[\"\" + primaryKey]) {\n            var table = this.getContentTable();\n            var sHeight = table.scrollHeight;\n            var clientHeight = this.getContent().clientHeight;\n            this.lastRowBorder(this.getRows()[currentRecords.indexOf(record)], sHeight <= clientHeight);\n        }\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        var columnModel = 'columnModel';\n        if (this.grid.columns.length !== this.columnModel.length) {\n            Columns = this.grid[\"\" + columnModel];\n        }\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[\"\" + columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[\"\" + prop] = gridColumns[parseInt(i.toString(), 10)][\"\" + prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[parseInt(i.toString(), 10)].field && this.columnModel[parseInt(i.toString(), 10)].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[parseInt(i.toString(), 10)].template = temp;\n                }\n            }\n        }\n        var deepMerge = 'deepMerge';\n        this[\"\" + deepMerge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            this.stackedHeader = true;\n        }\n        if (this.stackedHeader && this.allowResizing) {\n            for (var i = 0; i < this.columns.length; i++) {\n                if (!isNullOrUndefined(this.columns[parseInt(i.toString(), 10)].columns)) {\n                    for (var j = 0; j < this.columns[parseInt(i.toString(), 10)].columns.length; j++) {\n                        var stackedColumn = this.columns[parseInt(i.toString(), 10)]\n                            .columns[parseInt(j.toString(), 10)];\n                        var currentColumn = this.grid.getColumnByField(stackedColumn.field);\n                        stackedColumn.width = currentColumn.width;\n                    }\n                }\n                else if (!isNullOrUndefined(this.columns[parseInt(i.toString(), 10)].field)) {\n                    var fieldName = this.columns[parseInt(i.toString(), 10)].field;\n                    var currentColumn = this.grid.getColumnByField(fieldName);\n                    this.columns[parseInt(i.toString(), 10)].width = currentColumn.width;\n                }\n            }\n        }\n        if (!this.stackedHeader) {\n            merge(this.columns, this.columnModel);\n        }\n        this[\"\" + deepMerge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[\"\" + persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[\"\" + persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                dRows.push(rows[parseInt(i.toString(), 10)]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.grid.dataSource = this.flatData;\n            }\n            else {\n                this.grid.setProperties({\n                    dataSource: new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor)\n                }, true);\n            }\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[parseInt(i.toString(), 10)]);\n                if (!currentViewRecords[parseInt(i.toString(), 10)].expanded) {\n                    i += findChildrenRecords(currentViewRecords[parseInt(i.toString(), 10)]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if ((this.getBatchChanges()[this.changedRecords].length || this.getBatchChanges()[this.deletedRecords].length ||\n                this.getBatchChanges()[this.addedRecords].length) && this.editSettings.showConfirmDialog) {\n                var dialogObj = this.grid.editModule[\"\" + obj];\n                this.grid.editModule[\"\" + showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo_1 = this.grid.getRowInfo(target);\n            var record = rowInfo_1.rowData;\n            if (this.grid.isFrozenGrid() && this.enableVirtualization && !Object.keys(record).length) {\n                var freezeRows = 'freezeRows';\n                record = this.grid.contentModule[\"\" + freezeRows].filter(function (e) { return e.uid === rowInfo_1.row.getAttribute('data-uid'); })[0].data;\n            }\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo_1.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo_1.row, record);\n            }\n            else {\n                this.expandRow(rowInfo_1.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (expandingArgs.expandAll) {\n                    _this.expandCollapseAllChildren(record, 'expand', key, level);\n                }\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[\"\" + children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, true);\n                    }\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[parseInt(i.toString(), 10)]);\n        }\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            if (this.detailTemplate) {\n                record = this.grid.getCurrentViewRecords()[row.getAttribute('data-rowindex')];\n            }\n            else {\n                record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n            }\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                if (collapsingArgs.collapseAll) {\n                    _this.expandCollapseAllChildren(record, 'collapse', key);\n                }\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, false);\n                    }\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.updateExpandStateMapping = function (record, state) {\n        var totalRecords = record;\n        if (totalRecords.length) {\n            for (var i = 0; i < totalRecords.length; i++) {\n                totalRecords[parseInt(i.toString(), 10)][this.expandStateMapping] = state;\n                editAction({ value: totalRecords[parseInt(i.toString(), 10)], action: 'edit' }, this, this.isSelfReference, totalRecords[parseInt(i.toString(), 10)].index, this.grid.selectedRowIndex, this.expandStateMapping);\n            }\n        }\n        else {\n            record[\"\" + this.expandStateMapping] = state;\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, this.expandStateMapping);\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[parseInt(i.toString(), 10)].parentItem)) {\n                var puniqueID_1 = record[parseInt(i.toString(), 10)].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[parseInt(i.toString(), 10)], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[\"\" + primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[parseInt(i.toString(), 10)], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[\"\" + endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                for (var i = 0; i < rows.length; i++) {\n                    if (action === 'collapse') {\n                        this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                    }\n                    else {\n                        this.expandRow(rows[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.expandRow(rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var _this = this;\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if ((!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) || (action === 'collapse' || (this.isExpandAll && this.loadChildOnDemand) && !isRemoteData(this) && this.isSelfReference && isCountRequired(this))) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[parseInt(rowIndex.toString(), 10)];\n        }\n        else {\n            rowIndex = +row.getAttribute('data-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            row.querySelectorAll('.e-treerowcell')[0].setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n                var lastrowIdx = this.getVisibleRecords()[this.getVisibleRecords().length - 1]['index'];\n                var lastRow = this.getRowByIndex(lastrowIdx);\n                if (this.grid.getContentTable().clientHeight <= this.grid.getContent().clientHeight && !isNullOrUndefined(lastRow) && !lastRow.cells[0].classList.contains('e-lastrowcell')) {\n                    this.lastRowBorder(lastRow, true);\n                }\n            }\n            if (isCountRequired(this) && action === 'expand') {\n                var currentData = this.getCurrentViewRecords();\n                var visibleRecords = currentData.filter(function (e) {\n                    return getExpandStatus(_this, e, _this.parentData);\n                });\n                this.dataResults.result = visibleRecords;\n            }\n            if (!isNullOrUndefined(targetEle) && targetEle.closest('.e-treerowcell').classList.contains('e-cellselectionbackground')) {\n                targetEle.closest('.e-treerowcell').classList.remove('e-cellselectionbackground');\n                targetEle.closest('.e-treerowcell').removeAttribute('aria-selected');\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i >= 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        if (expandingArgs.requestType === 'collapse' && isCountRequired(this)) {\n            var flatDataRecords = this.flatData.slice();\n            for (var i = 0; i < flatDataRecords.length; i++) {\n                if (flatDataRecords[parseInt(i.toString(), 10)]['parentUniqueID'] === expandingArgs.data['uniqueID']) {\n                    flatDataRecords.splice(i, 1);\n                    i = i - 1;\n                }\n            }\n            this.dataResults.result = flatDataRecords;\n            return;\n        }\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[\"\" + childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                if (isCountRequired(_this)) {\n                    _this.flatData = _this.dataResults.result;\n                }\n                if (_this.enableInfiniteScrolling && isCountRequired(_this)) {\n                    _this.flatData = _this.infiniteScrollData;\n                }\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[parseInt(i.toString(), 10)].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[parseInt(i.toString(), 10)]) {\n                        childData[parseInt(i.toString(), 10)].level = record.level + 1;\n                        childData[parseInt(i.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        childData[parseInt(i.toString(), 10)].parentItem = extend({}, record);\n                        childData[parseInt(i.toString(), 10)].taskData = extend({}, childData[parseInt(i.toString(), 10)]);\n                        delete childData[parseInt(i.toString(), 10)].parentItem.childRecords;\n                        delete childData[parseInt(i.toString(), 10)].taskData.parentItem;\n                        childData[parseInt(i.toString(), 10)].parentUniqueID = record.uniqueID;\n                        childData[parseInt(i.toString(), 10)].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[parseInt(i.toString(), 10)].uniqueID, childData[parseInt(i.toString(), 10)], _this);\n                        if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][_this.childMapping]) ||\n                            (childData[parseInt(i.toString(), 10)][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[parseInt(i.toString(), 10)].hasChildRecords = true;\n                        }\n                        if (isCountRequired(_this) && record[_this.childMapping] && record[_this.childMapping][parseInt(i.toString(), 10)]) {\n                            currentData.splice(index + 1 + i, 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                        else {\n                            currentData.splice(index + 1 + i, record[_this.childMapping] &&\n                                record[_this.childMapping][parseInt(i.toString(), 10)] ? 1 : 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[parseInt(index.toString(), 10)][\"\" + _this.childMapping] = childData;\n                currentData[parseInt(index.toString(), 10)].childRecords = childData;\n                currentData[parseInt(index.toString(), 10)].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[parseInt(index.toString(), 10)].uniqueID, currentData[parseInt(index.toString(), 10)], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[parseInt(j.toString(), 10)]);\n                }\n            }\n            if (isCountRequired(_this) && _this.loadChildOnDemand && expandingArgs.requestType === 'expand') {\n                _this.dataResults['expandRecord'] = {};\n                _this.dataResults['expandRecord'] = expandingArgs.data;\n            }\n            _this.isExpandRefresh = true;\n            var scrollHeightBeforeRefresh = _this.getContentTable().parentElement.scrollTop;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            if (_this.enableInfiniteScrolling) {\n                _this.getContentTable().parentElement.scrollTop = scrollHeightBeforeRefresh;\n            }\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        var fetchRemoteChildData = 'fetchRemoteChildData';\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return ((r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1))) || (r.querySelector('.e-gridrowindex' + record.index + 'level0' + '.e-summarycell')));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else if (action === 'collapse' && this.enableVirtualization) {\n            this.dataModule[\"\" + fetchRemoteChildData]({ action: action, record: args.data, rows: null, parentRow: args.row });\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[parseInt(i.toString(), 10)][\"\" + primaryKeyField]);\n                rows.push(this.getRows()[parseInt(rowIndex.toString(), 10)]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var gridRowsObject = this.grid.getRowsObject();\n        var currentViewData = this.getCurrentViewRecords();\n        var currentRecord = currentViewData.filter(function (e) {\n            return e.uniqueID === record.uniqueID;\n        });\n        var currentIndex = currentViewData.indexOf(currentRecord[0]);\n        if (!isNullOrUndefined(gridRowsObject[parseInt(currentIndex.toString(), 10)].visible) &&\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible !== false) {\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = true;\n        }\n        var detailrows = gridRows.filter(function (r) {\n            return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)])) {\n                rows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization\n                || this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[rows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                var parentRecord = currentViewData.filter(function (e) {\n                    return e.uniqueID === currentRecord[0].parentUniqueID;\n                });\n                if (!isNullOrUndefined(parentRecord[0]) && gridRows[currentViewData.indexOf(parentRecord[0])].getElementsByClassName('e-treegridcollapse').length) {\n                    gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = false;\n                }\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[parseInt(i.toString(), 10)] });\n            if ((!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) && childRecords[parseInt(i.toString(), 10)].childRecords.length > 0) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].expanded) || childRecords[parseInt(i.toString(), 10)].expanded)) {\n                this.expandCollapse(action, rows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                }\n            }\n        }\n        for (var i = 0; i < detailrows.length; i++) {\n            if (!isNullOrUndefined(detailrows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization ||\n                this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[detailrows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                detailrows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n        }\n        if (!this.allowPaging && !(this.enableVirtualization || this.enableInfiniteScrolling || isRemoteData(this)\n            || isCountRequired(this))) {\n            this.grid.notify('refresh-Expand-and-Collapse', { rows: this.grid.getRowsObject() });\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[parseInt(i.toString(), 10)];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        var rows = this.getContentTable().rows;\n        rows = [].slice.call(rows);\n        for (var i = 0; i < rows.length; i++) {\n            var rcell = this.grid.getContentTable().rows[parseInt(i.toString(), 10)]\n                .cells[this.treeColumnIndex];\n            var row = rows[parseInt(i.toString(), 10)];\n            var rowData = this.grid.getRowsObject()[parseInt(i.toString(), 10)].data;\n            var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n            this.renderModule.cellRender(arg);\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].style.display = 'none';\n            row = rows[parseInt(i.toString(), 10)];\n            var collapsingTd = rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[parseInt(i.toString(), 10)].style.display = 'none';\n                rightrows[parseInt(i.toString(), 10)].style.display = 'none';\n                if (!rows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[parseInt(i.toString(), 10)];\n                    }\n                    else if (rightrows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * Method to sanitize html element\n     *\n     * @param {any} value - Specifies the html value to sanitize\n     * @returns {any} Returns the sanitized html value\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeGrid.prototype.sanitize = function (value) {\n        if (this.enableHtmlSanitizer && typeof (value) === 'string') {\n            return SanitizeHtmlHelper.sanitize(value);\n        }\n        return value;\n    };\n    /**\n     * Updates the rows and cells\n     *\n     * @param {Object[]} records - Updates the given records\n     * @param {HTMLTableRowElement[]} rows - Updates the given rows\n     * @param {number} index -  Updates the given cell index\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRowAndCellElements = function (records, rows, index) {\n        for (var i = 0; i < records.length; i++) {\n            this.renderModule.cellRender({\n                data: records[parseInt(i.toString(), 10)], cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                column: this.grid.getColumns()[this.treeColumnIndex],\n                requestType: 'rowDragAndDrop'\n            });\n            if (this['action'] === 'indenting' || this['action'] === 'outdenting') {\n                this.renderModule.RowModifier({\n                    data: records[parseInt(i.toString(), 10)], row: rows[parseInt(i.toString(), 10)]\n                });\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[parseInt(j.toString(), 10)].columns) {\n                cnt = this.getFrozenCount(cols[parseInt(j.toString(), 10)].columns, cnt);\n            }\n            else {\n                if (cols[parseInt(j.toString(), 10)].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Indents the record to one level of hierarchy. Moves the selected row as the last child of its previous row.\n     *\n     * @param {Object} record – specifies the record to do indented\n     * @returns {void}\n     */\n    TreeGrid.prototype.indent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'indent');\n        }\n    };\n    /**\n     * Outdent the record to one level of hierarchy. Moves the selected row as sibling to its parent row.\n     *\n     * @param {Object} record – specifies the record to do outdented\n     * @returns {void}\n     */\n    TreeGrid.prototype.outdent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'outdent');\n        }\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, LoadingIndicator)\n    ], TreeGrid.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableVirtualMaskRow\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[\"\" + columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[parseInt(f.toString(), 10)]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[\"\" + dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[parseInt(i.toString(), 10)]).rowIndex;\n                data[parseInt(i.toString(), 10)] = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[\"\" + action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                var parentrow = this.parent.getRows()[parseInt(toIndex.toString(), 10)];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[\"\" + action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[\"\" + primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].taskData ===\n                            record_1.parentItem.taskData) {\n                            dropIndex = i;\n                            if (tObj.enableVirtualization) {\n                                dropIndex = parseInt(tObj.getRows()[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10);\n                            }\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[\"\" + action] = 'indenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].uniqueID === parentItem.uniqueID) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[parseInt(dropIndex.toString(), 10)].getAttribute('data-rowindex'), 10);\n                }\n                tObj[\"\" + action] = 'outdenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[parseInt(i.toString(), 10)].index = i;\n            if (!isNullOrUndefined(currentData[parseInt(i.toString(), 10)].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[parseInt(i.toString(), 10)].parentUniqueID, this.parent);\n                currentData[parseInt(i.toString(), 10)].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[parseInt(i.toString(), 10)];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[parseInt(i.toString(), 10)];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[parseInt(j.toString(), 10)]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[parseInt(j.toString(), 10)]);\n                            childData[parseInt(j.toString(), 10)].taskData = extend({}, childData[parseInt(j.toString(), 10)]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[parseInt(i.toString(), 10)].uniqueID, dragRecords[parseInt(i.toString(), 10)], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[parseInt(i.toString(), 10)];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[parseInt(i.toString(), 10)][this.parent.childMapping] ===\n                    droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][parseInt(i.toString(), 10)]\n                        = childRecords[parseInt(i.toString(), 10)].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[parseInt(i.toString(), 10)].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        var sanitize = 'sanitize';\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = this.parent[\"\" + sanitize](errorVal.innerHTML);\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = this.parent[\"\" + sanitize](content);\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[parseInt(i.toString(), 10)].classList.add(className);\n            }\n            else {\n                cells[parseInt(i.toString(), 10)].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[parseInt(rowIdx.toString(), 10)];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][\"\" + parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField]);\n            var row = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[\"\" + primaryKeyField]);\n                var parentrow = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[parseInt(i.toString(), 10)],\n                        cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[parseInt(index.toString(), 10)],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[parseInt(i.toString(), 10)] = records[parseInt(i.toString(), 10)].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[parseInt(i.toString(), 10)].hasChildRecords) {\n                        actualData.push(records[parseInt(i.toString(), 10)]);\n                        var child = findChildrenRecords(records[parseInt(i.toString(), 10)]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[parseInt(i_1.toString(), 10)]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[parseInt(i.toString(), 10)].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[parseInt(i.toString(), 10)].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[parseInt(i.toString(), 10)].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[parseInt(i.toString(), 10)].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][\"\" + primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[parseInt(i.toString(), 10)];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            if (this_1.parent.enableImmutableMode || this_1.parent['isIndentEnabled'] && !this_1.parent.parentIdMapping) {\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[parseInt(recordIndex1.toString(), 10)].level;\n            this.treeGridData.splice(parseInt(recordIndex1.toString(), 10), 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                    droppedRecord.taskData[\"\" + childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[\"\" + isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, tObj);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, this.parent);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping]\n                        === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[parseInt(j.toString(), 10)][\"\" + primaryKeyField] === deletedRow[\"\" + primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[parseInt(i_2.toString(), 10)][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[parseInt(i_3.toString(), 10)][this.parent.idMapping]\n                    === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                if (!((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                    && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent))\n                    || notifyArgs.virtualInfo.blockIndexes.length === 1) {\n                    notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n                }\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[parseInt(r.toString(), 10)].index = (this.visualData).indexOf(rows[parseInt(r.toString(), 10)].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[\"\" + model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[parseInt(currentPage.toString(), 10)] &&\n                this.cache[parseInt(currentPage.toString(), 10)].length >\n                    (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[parseInt(currentPage.toString(), 10)];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[parseInt(f.toString(), 10)];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[parseInt(count.toString(), 10)].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[parseInt(count.toString(), 10)].uniqueID)) {\n                    this.filteredResult.push(childRec[parseInt(count.toString(), 10)]);\n                    setValue('uniqueIDFilterCollection.' + childRec[parseInt(count.toString(), 10)].uniqueID, childRec[parseInt(count.toString(), 10)], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[parseInt(count.toString(), 10)]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[parseInt(count.toString(), 10)]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID, true);\n                record[parseInt(c.toString(), 10)].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[parseInt(c.toString(), 10)].filterLevel = 0;\n                this.filteredParentRecs.push(record[parseInt(c.toString(), 10)]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[parseInt(count.toString(), 10)];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[parseInt(i.toString(), 10)].rows) {\n                workbook.worksheets[parseInt(i.toString(), 10)].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        this.parent.flatData.map(function (e) { return e.expanded = e.uniqueID === rowDetails.record.uniqueID &&\n            e.expanded !== rowDetails.record.expanded ? rowDetails.record.expanded : e.expanded; });\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[\"\" + primaryKeyField_1] === rowDetails.record[\"\" + primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[\"\" + action] === 'collapse') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[\"\" + action] === 'expand') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[parseInt(t.toString(), 10)]);\n            var res = [];\n            if (temp[parseInt(t.toString(), 10)].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[parseInt(t.toString(), 10)].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.updatePageSize = function (pageingDetails) {\n        var updateSize = pageingDetails.result.length;\n        var gridPagerModule = this.parent.grid.pagerModule;\n        if (this.parent.pageSettings.pageSizes === true) {\n            if (gridPagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === gridPagerModule.pagerObj.getLocalizedLabel('All')) {\n                gridPagerModule['pagerObj'].totalRecordsCount = updateSize;\n                this.parent.grid.pageSettings.pageSize = updateSize;\n            }\n        }\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            this.updatePageSize(pageingDetails);\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.rowDeselected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.rowDeselected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var toolbarElement = this.parent.grid.toolbarModule.getToolbar();\n        if (!isNullOrUndefined(toolbarElement)) {\n            var tObj = this.parent;\n            var indentElement = void 0;\n            var outdentElement = void 0;\n            var indentID = tObj.element.id + '_gridcontrol_indent';\n            var outdentID = tObj.element.id + '_gridcontrol_outdent';\n            var indentEle = toolbarElement.querySelector('#' + indentID);\n            var outdentEle = toolbarElement.querySelector('#' + outdentID);\n            var row = args.row;\n            var selectedrow = tObj.getSelectedRows()[0];\n            if (!isNullOrUndefined(row[0])) {\n                row = row[0];\n            }\n            row = (!isNullOrUndefined(selectedrow) && selectedrow.rowIndex !== row.rowIndex) ? selectedrow : row;\n            if (indentEle !== null && outdentEle !== null) {\n                indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n                outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n                if (row.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indentElement.classList.add('e-hidden');\n                    outdentElement.classList.add('e-hidden');\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[row.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[row.rowIndex - 1].level)) {\n                            indentElement.classList.add('e-hidden');\n                        }\n                        else {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === tObj.getCurrentViewRecords()[row.rowIndex - 1].level) {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === 0) {\n                            outdentElement.classList.add('e-hidden');\n                        }\n                        if (selectedItem.level !== 0) {\n                            outdentElement.classList.remove('e-hidden');\n                        }\n                    }\n                }\n                if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                    if (this.parent.toolbar['includes']('Indent')) {\n                        indentElement.classList.add('e-hidden');\n                    }\n                    if (this.parent.toolbar['includes']('Outdent')) {\n                        outdentElement.classList.add('e-hidden');\n                    }\n                }\n            }\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        var indentOutdentAction = 'indentOutdentAction';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'indent');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'outdent');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[parseInt(p.toString(), 10)]);\n            if (!summaryRow) {\n                parentData.push(filteredData[parseInt(p.toString(), 10)]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[parseInt(i.toString(), 10)];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[parseInt(i_1.toString(), 10)]))) ?\n                                columns[parseInt(i_1.toString(), 10)] : getObject('field', (columns[parseInt(i_1.toString(), 10)]));\n                            item[\"\" + field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[parseInt(columnIndex.toString(), 10)])) ?\n                    columns[parseInt(columnIndex.toString(), 10)] : getObject('field', columns[parseInt(columnIndex.toString(), 10)]);\n                items[\"\" + fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[parseInt(i.toString(), 10)];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[parseInt(i.toString(), 10)].columnName) ?\n                summary.columns[parseInt(i.toString(), 10)].field : summary.columns[parseInt(i.toString(), 10)].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[parseInt(i.toString(), 10)];\n            var key = summaryColumn.field + ' - ' + types[parseInt(i.toString(), 10)].toLowerCase();\n            var val = types[parseInt(i.toString(), 10)] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[parseInt(i.toString(), 10)], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[parseInt(i.toString(), 10)] !== 'Custom' ? val[\"\" + key] : val;\n            single[\"\" + disp] = single[\"\" + disp] || {};\n            single[\"\" + disp][\"\" + key] = value_1;\n            single[\"\" + disp][types[parseInt(i.toString(), 10)]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[\"\" + renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[\"\" + summaryColumn.columnName][\"\" + summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[parseInt(d.toString(), 10)].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n            }\n            if (data[parseInt(d.toString(), 10)].hasChildRecords) {\n                var childSort = (new DataManager(data[parseInt(d.toString(), 10)].childRecords)\n                    .executeLocal(srtQry));\n                if (this.parent.allowRowDragAndDrop && data[parseInt(d.toString(), 10)].childRecords.indexOf(this.parent.rowDragAndDropModule['draggedRecord']) !== -1 && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                    var dragdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                    childSort.splice(dragdIndex, 1);\n                    var dropdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                    if (this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                        childSort.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                    else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                        childSort.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                }\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        var indent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Indent', args.element);\n        var outdent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Outdent', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false || this.parent.grid.isEdit) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n        var tObj = this.parent;\n        var selectedrow = tObj.getSelectedRows()[0];\n        if ((indent || outdent) && !isNullOrUndefined(selectedrow)) {\n            var targetElement = args.event.target.closest('td');\n            if (isNullOrUndefined(targetElement) || (!isNullOrUndefined(targetElement) && !targetElement.classList.contains('e-rowcell'))) {\n                indent.style.display = outdent.style.display = 'none';\n            }\n            else {\n                if (selectedrow.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indent.style.display = outdent.style.display = 'none';\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[selectedrow.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            indent.style.display = 'none';\n                        }\n                        else {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) && this.parent.editSettings.mode !== 'Batch'\n                            && this.parent.editSettings.mode !== 'Cell') {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === 0) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            outdent.style.display = 'none';\n                        }\n                        else {\n                            outdent.style.display = 'block';\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (tObj.grid.isEdit && isNullOrUndefined(selectedrow)) {\n                indent.style.display = 'none';\n                outdent.style.display = 'none';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.editModule['isAddedRowByContextMenu'] = true;\n            this.parent.addRecord();\n        }\n        if (args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' || args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Outdent') {\n            if (!isNullOrUndefined(this.parent.rowDragAndDropModule)) {\n                var indentOutdentAction = 'indentOutdentAction';\n                var action = args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' ? 'indent' : 'outdent';\n                this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, action);\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.column.index;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount === this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.column.index)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.column.index)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem]) {\n                        parentUniqueID = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].edit === 'add') {\n                merge(this.currentViewRecords[parseInt(rowObjectIndex.toString(), 10)], this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[\"\" + isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[\"\" + isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex]\n                : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[parseInt(i.toString(), 10)]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[\"\" + primarykey]; }).indexOf(records[parseInt(i.toString(), 10)][\"\" + primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[parseInt(i.toString(), 10)])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[\"\" + addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                if (this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey] === records[parseInt(this.addRowIndex.toString(), 10)][\"\" + primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[\"\" + changeRecords];\n        if (e.batchChanges[\"\" + changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[parseInt(i.toString(), 10)], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[\"\" + deleterecords].length) {\n            var deletedRecords = e.batchChanges[\"\" + deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(record[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                e.batchChanges[\"\" + deleterecords] = e.batchChanges[\"\" + deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem] ? this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]\n                        : this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        var children = currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[parseInt(j.toString(), 10)][\"\" + primaryKey] === this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]) {\n                                currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[\"\" + targetElement])) {\n            var row = this.parent[\"\" + targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[\"\" + targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] === 0 ? this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] :\n                        this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(positionIndex, 0, this.batchDeletedRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[\"\" + addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[parseInt(i_1.toString(), 10)].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                            .indexOf(currentViewRecords[0][\"\" + primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[parseInt(i.toString(), 10)]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[parseInt(i.toString(), 10)].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[parseInt(i.toString(), 10)];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[parseInt(i.toString(), 10)].parentItem, 'add', this.parent, this.isSelfReference, addRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[parseInt(i.toString(), 10)], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                        .indexOf(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primarykey_1]);\n                    var children = currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[parseInt(j.toString(), 10)][\"\" + primarykey_1] === addRecords[parseInt(i.toString(), 10)][\"\" + primarykey_1]) {\n                            currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[\"\" + deletedRecords].length) {\n                for (i = 0; i < batchChanges[\"\" + deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[\"\" + deletedRecords][parseInt(i.toString(), 10)], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[parseInt(i_2.toString(), 10)][\"\" + index] = i_2;\n                setValue('uniqueIDCollection.' + data[parseInt(i_2.toString(), 10)][\"\" + uniqueID] + '.index', i_2, this.parent);\n                if (!data[parseInt(i_2.toString(), 10)][\"\" + level]) {\n                    this.parent.parentData.push(data[parseInt(i_2.toString(), 10)]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[parseInt(i.toString(), 10)][\"\" + index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[\"\" + index] = this.parent.getSelectedRows()[0][\"\" + rowIndex];\n        }\n        else {\n            args[\"\" + index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[parseInt(i.toString(), 10)].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[\"\" + updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n        else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[\"\" + promise];\n        delete args[\"\" + promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[\"\" + editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[\"\" + eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['virtualData'] = {};\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[parseInt(rowIndex.toString(), 10)].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[parseInt(i.toString(), 10)].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[\"\" + key] === data[parseInt(i.toString(), 10)][\"\" + key]) {\n                if (details.action === 'add') {\n                    data[parseInt(i.toString(), 10)].level = this.internalProperties.level;\n                    data[parseInt(i.toString(), 10)].taskData = this.internalProperties.taskData;\n                    data[parseInt(i.toString(), 10)].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[parseInt(i.toString(), 10)].parentItem = this.internalProperties.parentItem;\n                        data[parseInt(i.toString(), 10)].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[parseInt(i.toString(), 10)].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID, data[parseInt(i.toString(), 10)], this.parent);\n            }\n            if (!data[parseInt(i.toString(), 10)].level) {\n                this.parent.parentData.push(data[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[parseInt(j.toString(), 10)];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[parseInt(l.toString(), 10)].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[parseInt(count.toString(), 10)];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[parseInt(k.toString(), 10)];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[parseInt(treeColIndex.toString(), 10)];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[parseInt(l.toString(), 10)];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[parseInt(index.toString(), 10)]) &&\n                    records[parseInt(index.toString(), 10)].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[\"\" + r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][\"\" + position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[\"\" + r].splice(0, 1);\n                    this.parent.grid.contentModule[\"\" + r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][\"\" + position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][\"\" + position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[\"\" + frows].splice(0, 1);\n                        this.parent.grid.contentModule[\"\" + frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[parseInt(i.toString(), 10)].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    focussedElement.focus();\n                }\n                if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.parent.grid.contentModule['createEmptyRowdata']();\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[parseInt(i.toString(), 10)].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[\"\" + primaryKeys_2[0]] === args.data[parseInt(i.toString(), 10)][primaryKeys_2[0]]) {\n                            data_1[parseInt(i.toString(), 10)] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(data_1[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n                if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n                    this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n                }\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                currentData = this.parent.flatData;\n            }\n            else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n                this.selectedIndex = this.addRowIndex;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true :\n                this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n                        }\n                        else {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        }\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[parseInt(i.toString(), 10)].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[parseInt(i.toString(), 10)].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[parseInt(i.toString(), 10)]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[\"\" + visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[parseInt(i.toString(), 10)].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[parseInt(i.toString(), 10)].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[parseInt(i.toString(), 10)]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[parseInt(i.toString(), 10)].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[parseInt(i.toString(), 10)].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[\"\" + matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('data-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.getMovableVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, true);\n    };\n    VirtualTreeContentRenderer.prototype.getFrozenRightVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false, false, true);\n    };\n    VirtualTreeContentRenderer.prototype.getRowCollection = function (index, isMovable, isRowObject, isFrozenRight) {\n        var startIdx = parseInt(this.parent.getRows()[0].getAttribute(literals.dataRowIndex), 10);\n        var rowCollection = isMovable ? this.parent.getMovableDataRows() : this.parent.getDataRows();\n        rowCollection = isFrozenRight ? this.parent.getFrozenRightDataRows() : rowCollection;\n        var collection = isRowObject ? this.parent.getCurrentViewRecords() : rowCollection;\n        var selectedRow = collection[index - startIdx];\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n            if (!isRowObject) {\n                selectedRow = index <= this.parent.frozenRows ? rowCollection[parseInt(index.toString(), 10)]\n                    : rowCollection[(index - startIdx) + this.parent.frozenRows];\n            }\n            else {\n                selectedRow = index <= this.parent.frozenRows ?\n                    this.parent.getRowsObject()[parseInt(index.toString(), 10)].data : selectedRow;\n            }\n        }\n        return selectedRow;\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else if (this.parent.root.editSettings.newRowPosition !== 'Top' && this.parent.root.editModule.selectedIndex !== -1 || this.parent.root.editModule.selectedIndex !== -1) {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[\"\" + action]('data-ready', this.onDataReady, this);\n            this.parent[\"\" + action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction(), _this.parent);\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[\"\" + action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[\"\" + action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[\"\" + action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[\"\" + action]('edit-reset', this.resetIseditValue, this);\n            this.parent[\"\" + action]('get-virtual-data', this.getData, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[\"\" + action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[\"\" + action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[\"\" + action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[\"\" + virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                // To overcome the white space issue in last page when records collapsed\n                if (this.parent.isFrozenGrid() && e.count < Object.keys(this.parent.dataSource).length) {\n                    var width = this.parent.enableColumnVirtualization ?\n                        this.getColumnOffset(this.parent.columns.length - 1) + 'px' : '100%';\n                    var height = (this.parent.getRowHeight() * e.count) -\n                        (this.parent.getRowHeight() * this.parent.pageSettings.pageSize);\n                    getValue('virtualEle', this).setVirtualHeight(height, width);\n                }\n                if (!this.parent.enableColumnVirtualization && !this.parent.isFrozenGrid()) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || (this.isDataSourceChanged && (this.startIndex === -1 || this.startIndex === 0 && this['preStartIndex'] === 0))) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (!isNullOrUndefined(this.parent.getRowByIndex(0)) && this.parent.getRows().length && !this[\"\" + initialRowTop]) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[\"\" + initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[\"\" + initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[\"\" + dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[\"\" + rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[\"\" + containerRect])) {\n            this.observer[\"\" + containerRect] = this.observers[\"\" + containerRect];\n        }\n        if (isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule['addRowIndex'])) {\n            _super.prototype[\"\" + selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[parseInt(i.toString(), 10)]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        this['editedRowIndex'] = e.index;\n        var selector = '.e-row[data-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.dataRowIndex = addArgs.dataRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[\"\" + isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[\"\" + addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[\"\" + restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[\"\" + isAdd]) {\n            _super.prototype[\"\" + resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[\"\" + editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[\"\" + selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.editModule.addRecord(null, this.parent.root.editModule.selectedIndex);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[\"\" + getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.dataRowIndex = this.parent.root.editModule.selectedIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[\"\" + actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[\"\" + directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[\"\" + preventEvent] && !_this.parent.enableVirtualMaskRow) {\n                    _this.parent.showSpinner();\n                }\n                if (_this.parent.enableVirtualMaskRow && !_this[\"\" + preventEvent]) {\n                    setTimeout(function () {\n                        _this.parent.showMaskRow(current.axis);\n                        _this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n                    }, 0);\n                }\n                var height = _this.content.getBoundingClientRect().height;\n                var top_1 = _this.prevInfo.offsets ? _this.prevInfo.offsets.top : null;\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                var y = _this.getTranslateY(e.top, height, xAxis && top_1 === e.top ? _this.prevInfo : undefined, true);\n                if (!_this.parent.isFrozenGrid() || _this.parent.enableVirtualMaskRow) {\n                    if (_this.parent.enableVirtualMaskRow) {\n                        var upScroll = (e.top - _this.translateY) < 0;\n                        y = (Math.round(_this.translateY) > y && !upScroll) ? Math.round(_this.translateY) : y;\n                        _this.virtualEle.adjustTable(x, y);\n                    }\n                    else {\n                        _this.virtualEle.adjustTable(x, _this.translateY);\n                    }\n                    if (_this.parent.enableColumnVirtualization) {\n                        _this.header.virtualEle.adjustTable(x, 0);\n                    }\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        this['scrollAfterEdit']();\n        var info = scrollArgs.sentinel;\n        var rowHeight = this.parent.getRowHeight();\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * rowHeight;\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) + rowHeight >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        var currentViewData = this.parent.currentViewData;\n        var indexValue = 'index';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / rowHeight)\n                + Math.ceil(vHeight / rowHeight))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 && index !== this[\"\" + selectedRowIndex]) {\n                index = this[\"\" + selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            if (currentViewData.length && (currentViewData[0][\"\" + indexValue] >= this.parent.pageSettings.pageSize / 2) &&\n                ((currentViewData[0][\"\" + indexValue] - this.startIndex) < (this.parent.pageSettings.pageSize / 2))) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] - (this.parent.pageSettings.pageSize / 2);\n                this.endIndex = this.startIndex + this.parent.pageSettings.pageSize;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / rowHeight);\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[parseInt(rowPt.toString(), 10)]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('data-rowindex');\n            }\n            if (firsttdinx === 0) {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n            else {\n                this.translateY = (scrollArgs.offset.top - (outBuffer * rowHeight) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * rowHeight) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / rowHeight);\n            var isLastBlock = (this[\"\" + selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[\"\" + selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[\"\" + selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (currentViewData.length && this.startIndex > currentViewData[0][\"\" + indexValue] &&\n                ((this.startIndex - currentViewData[0][\"\" + indexValue]) < (this.parent.pageSettings.pageSize / 2))) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] + (this.parent.pageSettings.pageSize / 2);\n            }\n            if (scrollArgs.offset.top > (rowHeight * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (rowHeight * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left') ||\n            ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') && (downScroll || upScroll) || isCountRequired(this.parent))) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            this.requestType = 'virtualscroll';\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.showMaskRow(info.axis);\n                this.parent.addShimmerEffect();\n                this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n        else {\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.removeMaskRow();\n                this.parent.notify('removeGanttShimmer', { requestType: 'hideShimmer' });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent) || this.parent.isFrozenGrid()) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            if (isFrozen && ((isNullOrUndefined(this.requestType) && getValue('requestTypes', this).indexOf('isFrozen') === -1) ||\n                (this.parent.enableVirtualMaskRow && this.requestType === 'virtualscroll'))) {\n                getValue('requestTypes', this).push('isFrozen');\n                this.requestType = 'isFrozen';\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n            if (getValue('requestTypes', this).indexOf('isFrozen') !== -1) {\n                getValue('requestTypes', this).splice(getValue('requestTypes', this).indexOf('isFrozen'), 1);\n                this.requestType = this.requestType === 'isFrozen' ? undefined : this.requestType;\n            }\n            if (isFrozen && (!this.isExpandCollapse || this.translateY === 0)) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(0, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[\"\" + replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[\"\" + focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[\"\" + isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.dataRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[\"\" + isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[\"\" + restoreAdd].call(this);\n            _super.prototype[\"\" + ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback, instance) {\n        var containerRect = 'containerRect';\n        _super.prototype[\"\" + containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        if (getValue('options', this).movableContainer) {\n            var movableContainerRect = 'movableContainerRect';\n            _super.prototype[\"\" + movableContainerRect] = getValue('options', this).movableContainer.getBoundingClientRect();\n            EventHandler.add(getValue('options', this).movableContainer, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        }\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback, instance) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[\"\" + options].prevTop = this[\"\" + options].prevLeft = 0;\n        return function (e) {\n            var top = _this[\"\" + options].movableContainer ? _this[\"\" + options].container.scrollTop : e.target.scrollTop;\n            var left = _this[\"\" + options].movableContainer ? _this[\"\" + options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[\"\" + options].prevTop < top ? 'down' : 'up';\n            direction = _this[\"\" + options].prevLeft === left ? direction : _this[\"\" + options].prevLeft < left ? 'right' : 'left';\n            _this[\"\" + options].prevTop = top;\n            _this[\"\" + options].prevLeft = left;\n            var current = _this.sentinelInfo[\"\" + direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[\"\" + options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var check = _this.check(direction);\n            if (current.entered && (current.axis === 'X' || instance.enableVirtualMaskRow)) {\n                if (_this[\"\" + movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[\"\" + movableEle], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[\"\" + element], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced50;\n                if (current.axis === 'X') {\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    if ((instance.dataSource instanceof DataManager && instance.dataSource.dataSource.url !== undefined\n                        && !instance.dataSource.dataSource.offline && instance.dataSource.dataSource.url !== '') || isCountRequired(instance)\n                        || instance.enableVirtualMaskRow) {\n                        fn = instance.enableVirtualMaskRow ? debounced100 : fn;\n                        fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                    else {\n                        callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                }\n            }\n            _this[\"\" + fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' || requestType === 'searching' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length)) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else if (!this.parent['isExpandAll']) {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (!parentGrid.isFrozenGrid()) {\n            if (parentGrid.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n            }\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ColumnFreezeContentRenderer, FreezeContentRender, FreezeRowModelGenerator, RenderType } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { ColumnVirtualFreezeRenderer, setDebounce, VirtualFreezeHdrRenderer, VirtualFreezeRenderer } from '@syncfusion/ej2-grids';\nimport { TreeInterSectionObserver, VirtualTreeContentRenderer } from './virtual-tree-content-render';\nimport { getValue } from '@syncfusion/ej2-base';\n/**\n * VirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar VirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeRenderer, _super);\n    function VirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        FreezeContentRender.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var movableCont = this.getMovableContent();\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        if (this.parent.enableColumnVirtualization) {\n            this.virtualRenderer.virtualEle.movableContent = this.virtualRenderer.movableContent\n                = this.getPanel().querySelector('.' + literals.movableContent);\n            this.virtualRenderer.virtualEle.renderMovableWrapper(minHeight);\n            this.virtualRenderer.virtualEle.renderMovablePlaceHolder();\n            var tbl = movableCont.querySelector('table');\n            this.virtualRenderer.virtualEle.movableTable = tbl;\n            this.virtualRenderer.virtualEle.movableWrapper.appendChild(tbl);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movableWrapper);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movablePlaceholder);\n        }\n        this.virtualRenderer.virtualEle.wrapper.appendChild(this.getFrozenContent());\n        this.virtualRenderer.virtualEle.wrapper.appendChild(movableCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    /**\n     * @param {HTMLElement} target - specifies the target\n     * @param {DocumentFragment} newChild - specifies the newChild\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    /**\n     * @param {Object[]} data - specifies the data\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {Row<Column>[]} returns the row\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.generateRows = function (data, e) {\n        return _super.prototype.generateRows.call(this, data, e);\n    };\n    return VirtualTreeFreezeRenderer;\n}(VirtualFreezeRenderer));\nexport { VirtualTreeFreezeRenderer };\n/**\n * ColumnVirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar ColumnVirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(ColumnVirtualTreeFreezeRenderer, _super);\n    function ColumnVirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.serviceLoc = locator;\n        _this.eventListener('on');\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnVirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        ColumnFreezeContentRenderer.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var frozenRightCont = this.getFrozenRightContent();\n        var frzCont = this.getFrozenContent();\n        var movableCont = this.getMovableContent();\n        if (this.parent.getFrozenMode() === 'Right') {\n            frzCont = frozenRightCont;\n        }\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        _super.prototype['renderVirtualFrozenLeft'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenRight'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenLeftRight'].call(this, frzCont, movableCont, frozenRightCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    ColumnVirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    return ColumnVirtualTreeFreezeRenderer;\n}(ColumnVirtualFreezeRenderer));\nexport { ColumnVirtualTreeFreezeRenderer };\n/**\n * VirtualTreeFreezeHdrRenderer is used to render the virtual table within the frozen and movable header table\n *\n * @hidden\n */\nvar VirtualTreeFreezeHdrRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeHdrRenderer, _super);\n    function VirtualTreeFreezeHdrRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeHdrRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n    };\n    VirtualTreeFreezeHdrRenderer.prototype.rfshMovable = function () {\n        _super.prototype.rfshMovable.call(this);\n    };\n    return VirtualTreeFreezeHdrRenderer;\n}(VirtualFreezeHdrRenderer));\nexport { VirtualTreeFreezeHdrRenderer };\n","import { ColumnFreezeContentRenderer, ColumnFreezeHeaderRenderer, FreezeRender, parentsUntil, RenderType } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass, getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ColumnVirtualTreeFreezeRenderer, VirtualTreeFreezeRenderer, VirtualTreeFreezeHdrRenderer } from '../renderer/virtual-tree-freeze-render';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n        this.parent.grid.on('initial-load', this.instantiateRenderer, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n        this.parent.grid.off('initial-load', this.instantiateRenderer);\n    };\n    Freeze.prototype.instantiateRenderer = function () {\n        var renderer = getValue('serviceLocator', this.parent.grid).getService('rendererFactory');\n        if (this.parent.getFrozenColumns()) {\n            if (this.parent.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualTreeFreezeHdrRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new FreezeRender(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new VirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n        if (this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenRightColumnsCount()) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new ColumnFreezeHeaderRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnVirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnFreezeContentRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            var rData = this.parent.grid.getRowObjectFromUID(row.getAttribute('data-Uid')).data;\n            if (!isNullOrUndefined(movableRows) && row.parentElement.firstElementChild.clientHeight > 0) {\n                row.style.height = row.parentElement.firstElementChild.clientHeight + 'px';\n            }\n            row.style.display = args.action;\n            if (freeze && frozenRightRows.length) {\n                frozenRightRows[parseInt(i.toString(), 10)].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[row.rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length) {\n                    var data = this.parent.getCurrentViewRecords()[cRow[0].rowIndex];\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action, record: data });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell' && (!e.target['classList'].contains('e-treegridcollapse') && !e.target['classList'].contains('e-treegridexpand'))) {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getExpandStatus } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[\"\" + generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[parseInt(i.toString(), 10)], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            else {\n                rows[args.index + i + 1][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[parseInt(i.toString(), 10)]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    InfiniteScroll.prototype.collapseExpandInfinitechilds = function (row) {\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var infiniteParents = dm.executeLocal(new Query().where(expanded));\n        var visualData = infiniteParents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, infiniteParents);\n        });\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    if ((pageingDetails.actionArgs['action'] === 'expand' || pageingDetails.actionArgs['action'] === 'collapse') && this.parent.grid.pageSettings.currentPage !== 1) {\n                        current = 1;\n                        size = this.parent.grid.pageSettings.pageSize * this.parent.grid.pageSettings.currentPage;\n                    }\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[\"\" + keyField] === data[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[\"\" + resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[parseInt(index.toString(), 10)]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[\"\" + addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[parseInt(i.toString(), 10)], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[parseInt(newRowIndex.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[parseInt(newRowIndex.toString(), 10)][\"\" + position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[\"\" + addRowIndex]][\"\" + position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","parseInt","toString","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","filter","item","isSummaryRow","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","e","p","enableImmutableMode","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","updatedParent","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","renderModule","cellRender","cell","cells","column","getColumns","requestType","RowModifier","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","LoadingIndicator","_super","apply","Property","ChildProperty","Predicate","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","rowDeselecting","movableContent","frozenContent","content","dataRowIndex","TreeClipboard","serviceLocator","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","searchingRecords","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","aria-label","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkBoxRecord","hasFilteredChildRecords","checkAll","multiFilterCheckState","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","chkstate","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","rowsObj","getRowsObject","visible","proxy_1","parentrec","rowDragAndDropModule","getContentTable","scrollHeight","getContent","clientHeight","getVisibleRecords","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","summaryData","template","rowTemplate","treeColumn","templateFn","colindex","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","refreshReactColumnTemplateByUid","columnUid","clearTemplate","undefined","indent","getIndentCount","cellIndex","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","td","getCellFromIndex","refreshTD","treecell","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","actionArgs","searchString","expands","loadChildOnDemand","isExpandCollapse","this_1","childRecords_1","parent_1","getUid","Math","ceil","random","aggregates","summaryQuery","q","fn","summaryModule","calculateSummaryValue","rowDetails","isChild","gridRows","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","take","pageSize","expandDetail","showSpinner","remoteExpandedData","remoteCollapsedData","currentViewData","inx","haveChild","events.actionComplete","gridQuery","aggregateQuery","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","sortBy","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","dragdIndex","dropdIndex","sortArgs","temp","paging","printMode","actArgs","events.pagingActions","isCollapsedStatePersist","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","indentOutdentAction","modifiedRecords","stackedHeader","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","infiniteScrollData","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","freezePresent","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","IsRowDDInjected","isIndentEnabled","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","portals","isVue","vueInstance","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","refreshToolbarItems","renderComplete","destroyTemplateFn","toolbarElement","toolbarModule","getToolbar","indentID","outdentID","indentElement","outdentElement","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableVirtualMaskRow","loadingIndicator","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","templateInstance","enableHtmlSanitizer","triggerEvents","IsExpandCollapseClicked","checkboxOnly","bindGridEvents","rowSelecting","events.rowDeselecting","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","persistSelection","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","dataManager","isQueryInvokedFromData","callBackPromise_2","events.actionBegin","updateTreeGridModel","events.beginAdd","ag","showChildSummary","refresh","selectedItem_1","selectedRecords","dropIndex","dropPosition","selectedRows","isFrozenGrid","literals.movableContent","literals.frozenContent","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","iconCss","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","enablePersistence","treeColumnTextAlign","textAlign","treeColumnField","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","updateTreeColumnTextAlign","closeEdit","getColumnByField","treeGridElement","hasTreeGridChild","removeListener","dataBind","document","getElementById","getPersistData","keyEntity","ignoreOnPersist","currentObject","val","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","visibleRecords","sHeight","goToPage","pageNo","pagerModule","updateExternalMessage","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","currentColumn","stackedColumn","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","rowInfo_1","getCollapseExpandRecords","expandingArgs","expandCollapse","expandCollapseAllChildren","collapseArgs","setHeightForFrozenContent","updateExpandStateMapping","freeze","refreshScrollOffset","collapsingArgs","events.collapsed","firstElementChild","scrollTop","getRowHeight","scrollBy","state","totalRecords","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","puniqueID_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","lastrowIdx","lastRow","removeAttribute","events.localPagedExpandCollapse","flatDataRecords","deff","data_1","length_1","scrollHeightBeforeRefresh","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","getMovableRows","getFrozenRightRows","gridRowsObject","currentIndex","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","sanitize","SanitizeHtmlHelper","updateRowAndCellElements","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","outdent","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","hasDropItem","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropRows","orderToIndex","dropData","totalRecord","parentrow","request","selectedItemIndex","selectedItem","selectedRow","selectedRecord","record_1","eventTrigger","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","islastRowIndex","isEmptyRow","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","getBoundingClientRect","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","errorelem","errorValue","setStyleAttribute","border","box","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","isByMethod","draggedRecord_2","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","url","blockIndexes","getBlockIndexes","checkAndResetCache","clear","cache","movableCache","frozenRightCache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","updatePageSize","pageingDetails","updateSize","gridPagerModule","pageSizes","pagerObj","pagerdropdownModule","getLocalizedLabel","propname","skip","size","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","indentEle","outdentEle","selectedrow","isCheckBoxSelection","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","event","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","newlyAddedRecords","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","mRows","deleterecords","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","endIndex","rowPosition","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","newlyAddedRecord","seletedRow","beginAddEdit","primaryKeys_2","selector","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","getMovableVirtualRowByIndex","getRowCollection","getFrozenRightVirtualRowByIndex","isMovable","isRowObject","isFrozenRight","startIdx","literals.dataRowIndex","rowCollection","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","lastIndex","root","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","getColumnOffset","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","initialRowTop","gridTop","containerRect","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","showMaskRow","axis","top_1","offsets","xAxis","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","upScroll","virtualEle","adjustTable","header","sentinel","outBuffer","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","addShimmerEffect","removeMaskRow","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","name","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","instance","virtualScrollHandlers","movableContainer","delay","debounced100","debounce","debounced50","prevTop","prevLeft","scrollbar","delta","clearTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","VirtualTreeFreezeRenderer","freezeRowGenerator","FreezeRowModelGenerator","virtualRenderer","serviceLoc","getRenderer","virtualHdrRenderer","FreezeContentRender","setPanel","movableCont","getMovableContent","minHeight","literals.content","overflowX","renderFrozenWrapper","renderFrozenPlaceHolder","renderMovableWrapper","renderMovablePlaceHolder","tbl","movableTable","movableWrapper","movablePlaceholder","wrapper","getFrozenContent","setDebounce","movableEle","VirtualFreezeRenderer","ColumnVirtualTreeFreezeRenderer","ColumnFreezeContentRenderer","frozenRightCont","getFrozenRightContent","frzCont","getFrozenMode","ColumnVirtualFreezeRenderer","VirtualTreeFreezeHdrRenderer","rfshMovable","VirtualFreezeHdrRenderer","Freeze","FreezeColumn","dblClickHandler","instantiateRenderer","FreezeRender","ColumnFreezeHeaderRenderer","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","collapseExpandInfinitechilds","rowRenderer","RowRenderer","childRowObjects","childRowElements","infiniteParents","actions","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow"],"mappings":"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"}