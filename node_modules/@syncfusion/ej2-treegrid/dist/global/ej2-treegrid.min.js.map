{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/loading-indicator.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/models/infinite-scroll-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/renderer/virtual-tree-freeze-render.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/treegrid/actions/infinite-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[parseInt(i.toString(), 10)].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[parseInt(i.toString(), 10)]);\n        if (hasChild) {\n            datas.push(records[parseInt(i.toString(), 10)]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords.filter(function (item) { return !item.isSummaryRow; });\n        var keys = Object.keys(childRecords);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            datas.push(childRecords[parseInt(i.toString(), 10)]);\n            if (childRecords[parseInt(i.toString(), 10)].hasChildRecords ||\n                (!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) &&\n                    childRecords[parseInt(i.toString(), 10)].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[parseInt(i.toString(), 10)]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[parseInt(i.toString(), 10)]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[parseInt(j.toString(), 10)]] = array[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[\"\" + idFilter][\"\" + value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[\"\" + id][\"\" + value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[\"\" + addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[parseInt(k.toString(), 10)][\"\" + key]) === 'object') {\n                modifiedData[parseInt(k.toString(), 10)] = modifiedData[parseInt(k.toString(), 10)][\"\" + key];\n            }\n            var keys = modifiedData[parseInt(k.toString(), 10)].taskData ?\n                Object.keys(modifiedData[parseInt(k.toString(), 10)].taskData) :\n                Object.keys(modifiedData[parseInt(k.toString(), 10)]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[parseInt(i.toString(), 10)][\"\" + key] === modifiedData[parseInt(k.toString(), 10)][\"\" + key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[parseInt(i.toString(), 10)];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[\"\" + control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[\"\" + control.idMapping] === currentData_1[\"\" + control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[\"\" + control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[parseInt(p.toString(), 10)][\"\" + control.idMapping] === currentData_1[\"\" + control.idMapping]) {\n                                        if (!control.enableImmutableMode && parentData.childRecords.length === parentData['Children'].length) {\n                                            parentData['childRecords'].splice(p, 1);\n                                        }\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], keys[parseInt(j.toString(), 10)]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[\"\" + changedRecords].length === 0))\n                                    || keys[parseInt(j.toString(), 10)] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[parseInt(k.toString(), 10)].uniqueID);\n                                    treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]] =\n                                        modifiedData[parseInt(k.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[parseInt(j.toString(), 10)]] = editedData[keys[parseInt(j.toString(), 10)]]\n                                            = treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[\"\" + control.parentIdMapping] = treeData[parseInt(i.toString(), 10)][\"\" + control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], control.childMapping)) {\n                                        treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping] = [];\n                                    }\n                                    treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping])) {\n                    if (removeChildRecords(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping], modifiedData[parseInt(k.toString(), 10)], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[parseInt(addRowIndex.toString(), 10)];\n                if (!isNullOrUndefined(currentdata) && currentdata[\"\" + primaryKeys] === details.value[\"\" + primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[\"\" + internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[parseInt(j.toString(), 10)][\"\" + key] === modifiedData[\"\" + key] ||\n            (isSelfReference && childRecords[parseInt(j.toString(), 10)][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], keys[parseInt(i.toString(), 10)]) &&\n                        (control.editSettings.mode !== 'Cell' || keys[parseInt(i.toString(), 10)] === columnName)) {\n                        editedData[keys[parseInt(i.toString(), 10)]] =\n                            editedData.taskData[keys[parseInt(i.toString(), 10)]] =\n                                childRecords[parseInt(j.toString(), 10)][keys[parseInt(i.toString(), 10)]] =\n                                    modifiedData[keys[parseInt(i.toString(), 10)]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[\"\" + editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[\"\" + editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[\"\" + control.parentIdMapping] = childRecords[parseInt(j.toString(), 10)][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], control.childMapping)) {\n                            childRecords[parseInt(j.toString(), 10)][control.childMapping] = [];\n                        }\n                        childRecords[parseInt(j.toString(), 10)][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[parseInt(j.toString(), 10)][control.childMapping])) {\n            if (removeChildRecords(childRecords[parseInt(j.toString(), 10)][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[\"\" + key] === record[\"\" + key]) {\n            index_1 = i;\n            return;\n        } });\n        if (control.enableVirtualization && isNullOrUndefined(index_1)) {\n            var updatedParent = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n            record = updatedParent;\n        }\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[parseInt(index_1.toString(), 10)];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[\"\" + key] !== child[\"\" + key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[\"\" + control.childMapping].indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[parseInt(i.toString(), 10)][\"\" + primaryKeys] === record[\"\" + primaryKeys]) {\n                data[parseInt(i.toString(), 10)] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            if (action === 'add') {\n                row = control.getRows()[control.grid.getCurrentViewRecords().indexOf(record)];\n            }\n            else {\n                row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[\"\" + key])];\n            }\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[parseInt(index_2.toString(), 10)] ? row.cells[parseInt(index_2.toString(), 10)]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n            if (control.enableImmutableMode && control['action'] === 'indenting' || control['action'] === 'outdenting') {\n                control.renderModule.RowModifier({\n                    data: record, row: row\n                });\n            }\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[parseInt(i.toString(), 10)]] = column[keys[parseInt(i.toString(), 10)]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[parseInt(i.toString(), 10)] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'].renderModule[\"\" + refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the Loading Indicator of the Tree Grid.\n */\nvar LoadingIndicator = /** @class */ (function (_super) {\n    __extends(LoadingIndicator, _super);\n    function LoadingIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Spinner')\n    ], LoadingIndicator.prototype, \"indicatorType\", void 0);\n    return LoadingIndicator;\n}(ChildProperty));\nexport { LoadingIndicator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[parseInt(i.toString(), 10)] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[parseInt(i.toString(), 10)] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'primary_column_missing' || type[parseInt(i.toString(), 10)] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[parseInt(i.toString(), 10)] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent, serviceLocator) {\n        var _this = _super.call(this, parent.grid, serviceLocator) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        _this.serviceLocator = serviceLocator;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[\"\" + copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[parseInt(i.toString(), 10)]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[parseInt(i.toString(), 10)]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[parseInt(i.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader, i);\n                            }\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[\"\" + copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[parseInt(i.toString(), 10)] =\n                            this.treeGridParent.getVisibleColumns()[parseInt(i.toString(), 10)].headerText;\n                    }\n                    this[\"\" + getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[\"\" + copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[\"\" + isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem])) {\n            var treeLevel = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem]) &&\n                        currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[parseInt(selectedIndex.toString(), 10)].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[\"\" + copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + hasChildRecords]) {\n            var childData = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) && currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) {\n                        if ((!isNullOrUndefined(rows[parseInt(j.toString(), 10)])) && !rows[parseInt(j.toString(), 10)].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[parseInt(j.toString(), 10)].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[\"\" + copyContent]);\n                                this[\"\" + copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var headerContent = 'e-headercontent';\n/** @hidden */\nexport var movableContent = 'e-movablecontent';\n/** @hidden */\nexport var movableHeader = 'e-movableheader';\n/** @hidden */\nexport var frozenContent = 'e-frozencontent';\n/** @hidden */\nexport var frozenHeader = 'e-frozenheader';\n/** @hidden */\nexport var content = 'e-content';\n/** @hidden */\nexport var table = 'e-table';\n/** @hidden */\nexport var leftRight = 'Left-Right';\n/** @hidden */\nexport var frozenRight = 'frozen-right';\n/** @hidden */\nexport var frozenLeft = 'frozen-left';\n/** @hidden */\nexport var dataColIndex = 'data-colindex';\n/** @hidden */\nexport var ariaColIndex = 'aria-colindex';\n/** @hidden */\nexport var dataRowIndex = 'data-rowindex';\n/** @hidden */\nexport var ariaRowIndex = 'aria-rowindex';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.searchingRecords = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[\"\" + stackedHeader] ? this.parent[\"\" + columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[parseInt(col.toString(), 10)].showCheckbox) {\n                mappingUid = columns[parseInt(col.toString(), 10)].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[parseInt(j.toString(), 10)];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox', 'aria-label': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[parseInt(i.toString(), 10)]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[parseInt(j.toString(), 10)])) {\n                    flatRecord[keys[parseInt(j.toString(), 10)]] = record[keys[parseInt(j.toString(), 10)]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[parseInt(count.toString(), 10)].isSummaryRow) {\n                    if (childRecords[parseInt(count.toString(), 10)].hasChildRecords) {\n                        this.traverSelection(childRecords[parseInt(count.toString(), 10)], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[parseInt(count.toString(), 10)], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[parseInt(i.toString(), 10)].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        //This property used to maintain the check state of the currentview data after clear filtering\n        var multiFilterCheckState = false;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            if (this.parent.grid.searchSettings.key.length) {\n                this.searchingRecords = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                    multiFilterCheckState = true;\n                }\n                else {\n                    multiFilterCheckState = false;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length && !this.parent.grid.searchSettings.key.length) {\n                this.filteredList = [];\n            }\n            if (this.searchingRecords.length && !isNullOrUndefined(checkAll)) {\n                this.filteredList = this.searchingRecords;\n            }\n        }\n        var data;\n        if (!(isNullOrUndefined(this.parent.filterModule)) &&\n            this.parent.filterModule.filteredResult.length === 0 && this.parent.getCurrentViewRecords().length === 0 &&\n            this.parent.filterSettings.columns.length > 0) {\n            data = this.filteredList;\n        }\n        else {\n            data = (!isNullOrUndefined(this.parent.filterModule) &&\n                (this.filteredList.length > 0)) ? this.filteredList : this.parent.flatData;\n        }\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[parseInt(i.toString(), 10)].checkboxState === 'check') {\n                        continue;\n                    }\n                    if (multiFilterCheckState) {\n                        continue;\n                    }\n                    data[parseInt(i.toString(), 10)].checkboxState = 'check';\n                    this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[parseInt(i.toString(), 10)]);\n                    if (index > -1) {\n                        data[parseInt(i.toString(), 10)].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var tr = this.parent.getRows()[parseInt(recordIndex.toString(), 10)];\n        var checkbox;\n        if (recordIndex > -1) {\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[parseInt(recordIndex.toString(), 10)];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n                var chkstate = checkState === 'check' ? 'checked' : checkState === 'uncheck' ? 'unchecked' : 'mixed';\n                tr.querySelector('.e-treecheckselect').setAttribute('aria-checked', checkState === 'check' ? 'true' : checkState === 'uncheck' ? 'false' : 'mixed');\n                tr.querySelector('.e-frame').setAttribute('title', 'checkbox' + chkstate);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[parseInt(i.toString(), 10)], childData[parseInt(i.toString(), 10)].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[parseInt(i.toString(), 10)]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[parseInt(i.toString(), 10)], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[parseInt(i.toString(), 10)].parentItem)) {\n                            this.updateParentSelection(updatedData[parseInt(i.toString(), 10)].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords && record.childRecords.length > 0) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[parseInt(i.toString(), 10)].hasChildRecords) {\n                                    _this.updateParentSelection(child[parseInt(i.toString(), 10)]);\n                                }\n                                else if (!(child[parseInt(i.toString(), 10)].hasChildRecords) &&\n                                    !isNullOrUndefined(child[parseInt(i.toString(), 10)])) {\n                                    _this.updateSelectedItems(child[parseInt(i.toString(), 10)], child[parseInt(i.toString(), 10)].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend, CellRenderer } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed && !isNullOrUndefined(args.row)) {\n                args.row.style.display = 'none';\n                var rowsObj = this.parent.grid.getRowsObject();\n                if (!isNullOrUndefined(args.row.getAttribute('data-uid'))) {\n                    rowsObj.filter(function (e) { return e.uid === args.row.getAttribute('data-uid'); })[0].visible = false;\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0 && !parentrec[0].isSummaryRow && !isNullOrUndefined(args.row)) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (!isNullOrUndefined(args.row)) {\n            if (args.row.querySelector('.e-treegridexpand')) {\n                args.row.setAttribute('aria-expanded', 'true');\n            }\n            else if (args.row.querySelector('.e-treegridcollapse')) {\n                args.row.setAttribute('aria-expanded', 'false');\n            }\n            if (this.parent.enableCollapseAll && this.parent.initialRender) {\n                if (!isNullOrUndefined(data.parentItem)) {\n                    args.row.style.display = 'none';\n                }\n            }\n        }\n        var dragStartData = 'dragStartData';\n        var draggedRecord = 'draggedRecord';\n        if (this.parent.rowDragAndDropModule && this.parent.grid.rowDragAndDropModule && (this.parent.grid.rowDragAndDropModule[\"\" + dragStartData] ||\n            this.parent.rowDragAndDropModule[\"\" + draggedRecord]) && this.parent.getContentTable().scrollHeight <= this.parent.getContent().clientHeight) {\n            var lastRowBorder = 'lastRowBorder';\n            var lastVisualData = this.parent.getVisibleRecords()[this.parent.getVisibleRecords().length - 1];\n            if (lastVisualData.uniqueID === args.data.uniqueID && !isNullOrUndefined(args.row) && !args.row.cells[0].classList.contains('e-lastrowcell')) {\n                this.parent[\"\" + lastRowBorder](args.row, true);\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[\"\" + getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                args.cell.setAttribute('aria-expanded', data.expanded ? 'true' : 'false');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '4px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                if (args.column.template) {\n                    args.cell.innerHTML = null;\n                }\n                else {\n                    args.cell.innerHTML = summaryData;\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('data-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[\"\" + templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[\"\" + templateFn](args.data, this.parent, 'columnTemplate', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[\"\" + portals])) {\n                        this.parent.grid[\"\" + portals] = this.parent[\"\" + portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n                    this.parent[\"\" + renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[\"\" + templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[\"\" + str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[\"\" + templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.parent.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.parent.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.parent.grid.getRowsObject();\n                var indent = _this.parent.grid.getIndentCount();\n                var cellIndex = _this.parent.grid.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[parseInt(j.toString(), 10)].isDataRow && !isNullOrUndefined(rowsObj[parseInt(j.toString(), 10)].index)) {\n                        var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n                        var cellRenderer = new CellRenderer(_this.parent.grid, _this.parent.grid.serviceLocator);\n                        var td = _this.parent.getCellFromIndex(rowsObj[parseInt(j.toString(), 10)].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[parseInt(j.toString(), 10)].data, { index: rowsObj[parseInt(j.toString(), 10)][\"\" + rowIdx] });\n                        var treecell = _this.parent.getRows()[parseInt(j.toString(), 10)]\n                            .cells[parseInt(cellIndex.toString(), 10)];\n                        _this.cellRender({ data: rowsObj[parseInt(j.toString(), 10)].data, cell: treecell, column: cell.column });\n                    }\n                }\n            });\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[\"\" + portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n        this.parent[\"\" + renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            var keys = Object.keys(data);\n            for (var i = 0; i < keys.length; i++) {\n                var tempData = data[parseInt(i.toString(), 10)];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[parseInt(i.toString(), 10)];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[parseInt(index.toString(), 10)][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[\"\" + isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var actionArgs = 'actionArgs';\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && args[\"\" + actionArgs].requestType === 'virtualscroll') {\n            this.parent.hideSpinner();\n        }\n        var records = args.result;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && (args[\"\" + actionArgs].requestType === 'virtualscroll' || args[\"\" + actionArgs].action === 'clearFilter' || args[\"\" + actionArgs].searchString === '')) {\n            this.parent.query.expands = [];\n        }\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                var _loop_1 = function (rec) {\n                    if (isCountRequired(this_1.parent) && records[parseInt(rec.toString(), 10)].hasChildRecords &&\n                        this_1.parent.initialRender) {\n                        records[parseInt(rec.toString(), 10)].expanded = false;\n                    }\n                    if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization) {\n                        var childRecords_1 = [];\n                        var parent_1 = this_1.parent;\n                        records.filter(function (e) {\n                            if (e[\"\" + parent_1.parentIdMapping] === records[parseInt(rec.toString(), 10)][\"\" + parent_1.idMapping]) {\n                                childRecords_1.push(e);\n                            }\n                        });\n                        if (childRecords_1.length) {\n                            records[parseInt(rec.toString(), 10)].expanded = true;\n                        }\n                        else if (records[parseInt(rec.toString(), 10)].hasChildRecords) {\n                            records[parseInt(rec.toString(), 10)].expanded = false;\n                        }\n                    }\n                    if (isNullOrUndefined(records[parseInt(rec.toString(), 10)].index)) {\n                        records[parseInt(rec.toString(), 10)].taskData = extend({}, records[parseInt(rec.toString(), 10)]);\n                        records[parseInt(rec.toString(), 10)].uniqueID = getUid(this_1.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[parseInt(rec.toString(), 10)].uniqueID, records[parseInt(rec.toString(), 10)], this_1.parent);\n                        records[parseInt(rec.toString(), 10)].level = 0;\n                        if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization && records[parseInt(rec.toString(), 10)][\"\" + this_1.parent.parentIdMapping] && records[parseInt(rec.toString(), 10)].level === 0) {\n                            records[parseInt(rec.toString(), 10)].level = records[parseInt(rec.toString(), 10)].level + 1;\n                        }\n                        records[parseInt(rec.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        if ((records[parseInt(rec.toString(), 10)][this_1.parent.hasChildMapping] ||\n                            this_1.parentItems.indexOf(records[parseInt(rec.toString(), 10)][this_1.parent.idMapping]) !== -1)) {\n                            records[parseInt(rec.toString(), 10)].hasChildRecords = true;\n                        }\n                        records[parseInt(rec.toString(), 10)].checkboxState = 'uncheck';\n                    }\n                };\n                var this_1 = this;\n                for (var rec = 0; rec < records.length; rec++) {\n                    _loop_1(rec);\n                }\n            }\n            else {\n                var dataResults = 'dataResults';\n                var expandRecord = 'expandRecord';\n                if (!isNullOrUndefined(records) && !((this.parent.loadChildOnDemand) && isCountRequired(this.parent) && !isNullOrUndefined(this.parent[\"\" + dataResults][\"\" + expandRecord])) &&\n                    !(isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization) {\n            args.result = records;\n        }\n        else if (isRemoteData(this.parent) && this.parent.enableVirtualization && !this.parent.loadChildOnDemand) {\n            args.result = records;\n        }\n        else {\n            args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        }\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && this.parent.loadChildOnDemand\n            && this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var query = 'query';\n            var summaryQuery = args[\"\" + query].queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            args.result = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        var name = 'name';\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[parseInt(i.toString(), 10)].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[parseInt(i.toString(), 10)].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ?\n                        this.parent.grid.getCurrentViewRecords()[rowDetails.rows[parseInt(i.toString(), 10)].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ action: rowDetails[\"\" + name], record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        if (this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n            qry.take(this.parent.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('ExpandingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        else if (this.parent.enableVirtualization && rowDetails.action === 'collapse') {\n            qry.take(this.parent.grid.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('CollapsingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var remoteExpandedData = 'remoteExpandedData';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            var level = 'level';\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (_this.parent.enableVirtualization && (rowDetails.action === 'collapse' || rowDetails.action === 'remoteExpand')) {\n                datas = [];\n                for (var i = 0; i < inx; i++) {\n                    datas.push(_this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                }\n            }\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'remoteExpand') {\n                    _this.parent[\"\" + remoteExpandedData].push(rowDetails.record);\n                }\n                else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'collapse') {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            _this.parent[\"\" + remoteExpandedData].splice(i, 1);\n                        }\n                    }\n                }\n                result[parseInt(r.toString(), 10)].taskData = extend({}, result[parseInt(r.toString(), 10)]);\n                if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] && _this.parent.enableVirtualization && _this.parent[\"\" + remoteExpandedData].length) {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + level] + 1;\n                            var parentData = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)];\n                            result[parseInt(r.toString(), 10)].parentItem = parentData;\n                            result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                        }\n                    }\n                }\n                else if (_this.parent.enableVirtualization) {\n                    if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                        _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                        if (isNullOrUndefined(result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping])) {\n                            result[parseInt(r.toString(), 10)].level = 0;\n                        }\n                        else {\n                            result[parseInt(r.toString(), 10)].level = rowDetails.record.level;\n                        }\n                    }\n                    else {\n                        var parentData = extend({}, rowDetails.record);\n                        delete parentData.childRecords;\n                        result[parseInt(r.toString(), 10)].parentItem = parentData;\n                        result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                    }\n                }\n                else {\n                    result[parseInt(r.toString(), 10)].level = rowDetails.record.level + 1;\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[parseInt(r.toString(), 10)].parentItem = parentData;\n                    result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                }\n                result[parseInt(r.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                result[parseInt(r.toString(), 10)].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[parseInt(r.toString(), 10)].checkboxState = 'uncheck';\n                if (_this.parent.enableVirtualization && isNullOrUndefined(result[parseInt(r.toString(), 10)].level)) {\n                    for (var p = 0; p < _this.parent.grid.currentViewData.length; p++) {\n                        if (_this.parent.grid.currentViewData[parseInt(p.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent.grid.currentViewData[parseInt(p.toString(), 10)]['level'] + 1;\n                        }\n                    }\n                }\n                setValue('uniqueIDCollection.' + result[parseInt(r.toString(), 10)].uniqueID, result[parseInt(r.toString(), 10)], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                    _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                    result[parseInt(r.toString(), 10)].hasChildRecords = true;\n                    if (_this.parent.enableVirtualization && _this.parent.loadChildOnDemand) {\n                        for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                            if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                result[parseInt(r.toString(), 10)].expanded = _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)]['expanded'];\n                            }\n                        }\n                        if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] !== rowDetails.record[\"\" + _this.parent.idMapping] && result[parseInt(r.toString(), 10)].expanded !== false) {\n                            result[parseInt(r.toString(), 10)].expanded = true;\n                        }\n                        else if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].expanded = false;\n                            _this.parent[\"\" + remoteCollapsedData].push(rowDetails.record);\n                        }\n                        else if (rowDetails.action === 'remoteExpand') {\n                            for (var i = 0; i < _this.parent.grid.currentViewData.length; i++) {\n                                if (_this.parent.grid.currentViewData[parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                    result.splice(r, 1, _this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)][_this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                                for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                                    if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                        _this.parent[\"\" + remoteCollapsedData].splice(i, 1);\n                                    }\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)].expanded !== false) {\n                                result[parseInt(r.toString(), 10)].expanded = true;\n                            }\n                        }\n                    }\n                    else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action !== 'collapse') {\n                        result[parseInt(r.toString(), 10)].expanded = true;\n                    }\n                    else if (!(_this.parent.enableVirtualization && _this.parent.loadChildOnDemand)) {\n                        result[parseInt(r.toString(), 10)].expanded = false;\n                    }\n                }\n                datas.splice(inx + r + 1, 0, result[parseInt(r.toString(), 10)]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[\"\" + result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[\"\" + result_1], true);\n                }\n            }\n            if (_this.parent.enableVirtualization) {\n                _this.parent.grid.pageSettings.totalRecordsCount = e.count;\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization) {\n            var index = this.parent.query.queries.indexOf(this.parent.query.queries.filter(function (q) { return q.fn === 'onSortBy'; })[0]);\n            if (index !== -1) {\n                this.parent.query.queries.splice(index, 1);\n            }\n            if (this.parent.grid.sortSettings.columns.length === 0) {\n                this.parent.query.sortBy(null, null);\n            }\n        }\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        var keys = Object.keys(data);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var currentData = extend({}, data[parseInt(i.toString(), 10)]);\n            currentData.taskData = data[parseInt(i.toString(), 10)];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if ((!isNullOrUndefined(currentData[this.parent.childMapping]) && !isCountRequired(this.parent)) ||\n                ((currentData[this.parent.hasChildMapping]) && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            if (this.parent.enableVirtualization && this.parent.loadChildOnDemand && isRemoteData(this.parent)\n                && !this.parent.initialRender) {\n                if (!currentData.hasChildRecords && isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping])) {\n                    currentData.hasChildRecords = true;\n                    for (var c = 0; c < this.parent[\"\" + remoteCollapsedData].length; c++) {\n                        if (this.parent[\"\" + remoteCollapsedData][parseInt(c.toString(), 10)][\"\" + this.parent.idMapping] === currentData[\"\" + this.parent.idMapping]) {\n                            currentData.expanded = false;\n                        }\n                    }\n                }\n                else if (currentData.level === 0 && isNullOrUndefined(parentRecords) && !currentData.hasChildRecords) {\n                    currentData.level = currentData.level + 1;\n                }\n                if (currentData[\"\" + this.parent.hasChildMapping] && !isNullOrUndefined(currentData[\"\" + this.parent.expandStateMapping])) {\n                    currentData.expanded = currentData[\"\" + this.parent.expandStateMapping];\n                    currentData.hasChildRecords = true;\n                }\n                this.parent.flatData.push(currentData);\n            }\n            else if (isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n                this.parent['infiniteScrollData'].push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[\"\" + primaryKeyColumnName])) {\n            actionAddArgs.data[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n            dataValue.taskData[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[\"\" + getColumnByField](this.parent.grid.\n                    sortSettings.columns[parseInt(srt.toString(), 10)].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            if (this.parent.allowRowDragAndDrop && !isNullOrUndefined(this.parent.rowDragAndDropModule['draggedRecord']) &&\n                this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                var dragdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                modifiedData.splice(dragdIndex, 1);\n                var dropdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                if (this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                    modifiedData.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n                else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                    modifiedData.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n            }\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[\"\" + isPdfExport] && (isNullOrUndefined(args[\"\" + isCollapsedStatePersist])\n            || args[\"\" + isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[parseInt(i.toString(), 10)], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[parseInt(i.toString(), 10)]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n    ContextMenuItems[ContextMenuItems[\"RowIndent\"] = 16] = \"RowIndent\";\n    ContextMenuItems[ContextMenuItems[\"RowOutdent\"] = 17] = \"RowOutdent\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend, merge, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { LoadingIndicator } from '../models/loading-indicator';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\nimport * as literals from '../base/constant';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.indentOutdentAction = 'indentOutdentAction';\n        _this.modifiedRecords = [];\n        _this.stackedHeader = false;\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[parseInt(i.toString(), 10)]] !== current[keys[parseInt(i.toString(), 10)]] &&\n                        excludeKeys.indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                        var isDate = old[keys[parseInt(i.toString(), 10)]] instanceof Date &&\n                            current[keys[parseInt(i.toString(), 10)]] instanceof Date;\n                        if (!isDate || (old[keys[parseInt(i.toString(), 10)]].getTime() !==\n                            current[keys[parseInt(i.toString(), 10)]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[\"\" + logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridexpand')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                        }\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridcollapse')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                        }\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[parseInt(cellIndex.toString(), 10)];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[parseInt(cIndex.toString(), 10)];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.infiniteScrollData = [];\n        this.remoteCollapsedData = [];\n        this.remoteExpandedData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[\"\" + splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        var freezePresent = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'freeze';\n        });\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount() || freezePresent.length) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        var IsRowDDInjected = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'rowDragAndDrop';\n        });\n        if (this.allowRowDragAndDrop || IsRowDDInjected.length) {\n            if ((!isNullOrUndefined(this.toolbar) && (this.toolbar['includes']('Indent') ||\n                this.toolbar['includes']('Outdent')))) {\n                this.isIndentEnabled = true;\n            }\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        if (this.isVue) {\n            this.grid.isVue = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.grid.vueInstance = this.vueInstance;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[parseInt(i.toString(), 10)].member === 'virtualscroll') {\n                    modules[parseInt(i.toString(), 10)].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        var root = 'root';\n        this.grid[\"\" + root] = this[\"\" + root] ? this[\"\" + root] : this;\n        this.grid.appendTo(gridContainer);\n        if (this.isIndentEnabled) {\n            this.refreshToolbarItems();\n        }\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[\"\" + destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[\"\" + destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[\"\" + portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.refreshToolbarItems = function () {\n        var toolbarElement = this.toolbarModule.getToolbar();\n        var indentID = this.element.id + '_gridcontrol_indent';\n        var outdentID = this.element.id + '_gridcontrol_outdent';\n        var indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n        var outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n        indentElement.classList.add('e-hidden');\n        outdentElement.classList.add('e-hidden');\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this, this.grid.serviceLocator);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.enableVirtualMaskRow = this.enableVirtualMaskRow;\n        this.grid.loadingIndicator = this.loadingIndicator;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[\"\" + templateInstance] = this[\"\" + templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[\"\" + isJsComponent] = true;\n        var enableHtmlSanitizer = 'enableHtmlSanitizer';\n        this.grid[\"\" + enableHtmlSanitizer] = this.enableHtmlSanitizer;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.IsExpandCollapseClicked = function (args) {\n        if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))\n            && (!isNullOrUndefined(args.data) && args.data['hasChildRecords']) && !this.selectionSettings.checkboxOnly) {\n            args.cancel = true;\n            return;\n        }\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowDeselecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[parseInt(i.toString(), 10)].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(i.toString(), 10)], _this.getCurrentViewRecords()[parseInt(i.toString(), 10)].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (!isNullOrUndefined(args.data)) {\n                _this.notify(events.rowDeselected, args);\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[\"\" + rowIndex]].classList.contains('e-summaryrow')) {\n                args[\"\" + rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[\"\" + loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        if (totalRows[parseInt(i.toString(), 10)].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[\"\" + action] === 'expand' || _this.dataResults[\"\" + action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[\"\" + refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(index.toString(), 10)], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[\"\" + dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var actualTarget = 'actualTarget';\n            var target = _this.grid.selectionModule[\"\" + actualTarget];\n            if (!isNullOrUndefined(target) && (target.classList.contains('e-treegridexpand') || target.classList.contains('e-treegridcollapse'))) {\n                args.cancel = true;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                if (args.action.requestType !== 'infiniteScroll') {\n                    _this.infiniteScrollData = [];\n                }\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[\"\" + prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        var _this = this;\n        if (this.rowTemplate) {\n            if (this.isReact && this.getContentTable().rows.length === 0) {\n                setTimeout(function () {\n                    _this.treeColumnRowTemplate();\n                    if (_this.enableCollapseAll) {\n                        var currentData = _this.getCurrentViewRecords();\n                        var rows = _this.getContentTable().rows;\n                        for (var i = 0; i < rows.length; i++) {\n                            var args = { data: currentData[parseInt(i.toString(), 10)], row: rows[parseInt(i.toString(), 10)] };\n                            _this.renderModule.RowModifier(args);\n                        }\n                    }\n                }, 0);\n            }\n            else {\n                this.treeColumnRowTemplate();\n            }\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[\"\" + dataSource].json = extendArray(this.dataSource[\"\" + dataSource].json);\n            this.grid.dataSource[\"\" + ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[\"\" + ready])) {\n                this.grid.dataSource[\"\" + ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[\"\" + dataSource].offline = true;\n                    dm[\"\" + isDataAvailable] = true;\n                    dm[\"\" + dataSource].json = e.result;\n                    dm[\"\" + adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (isRemoteData(_this) && _this.enableVirtualization) {\n                if (args.requestType === 'virtualscroll') {\n                    _this.query.expand('VirtualScrollingAction');\n                    _this.showSpinner();\n                }\n                else if (args.requestType === 'searching' && args.searchString === '') {\n                    _this.query.expand('ClearSearchingAction');\n                }\n                else if (args.action === 'clearFilter') {\n                    _this.query.expand('ClearFilteringAction');\n                }\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 && _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            if (_this.action !== 'indenting' && _this.action !== 'outdenting') {\n                var callBackPromise_2 = new Deferred();\n                _this.trigger(events.actionBegin, args, function (actionArgs) {\n                    if (!actionArgs.cancel) {\n                        _this.notify(events.beginEdit, actionArgs);\n                    }\n                    callBackPromise_2.resolve(actionArgs);\n                });\n                return callBackPromise_2;\n            }\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            if (args.action === 'filter') {\n                if (_this.filterModule['currentFilterObject'] !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.requestType === 'searching') {\n                if (_this.searchSettings.key !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.action === 'clearFilter' && _this.enableCollapseAll) {\n                _this.collapseAll();\n            }\n            if (_this.action === 'indenting' || _this.action === 'outdenting') {\n                _this.action = _this.action === 'indenting' ? 'indented' : 'outdented';\n                var selectedItem_1 = [_this.selectedRecords];\n                var actionArgs = {\n                    data: selectedItem_1,\n                    dropIndex: _this.dropIndex,\n                    dropPosition: _this.dropPosition,\n                    modifiedRecords: _this.modifiedRecords,\n                    requestType: _this.action,\n                    row: _this.selectedRows\n                };\n                _this.trigger(events.actionComplete, actionArgs);\n                var currentPageItem = _this.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === selectedItem_1[0].uniqueID;\n                });\n                if (!currentPageItem.length) {\n                    _this.refreshToolbarItems();\n                }\n                _this.action = '';\n                _this.selectedRecords = _this.selectedRows = _this.modifiedRecords = [];\n            }\n            else {\n                if (_this.grid.isFrozenGrid() && _this.enableVirtualization && args['tableName'] === 'movable') {\n                    var movableContent = _this.grid.element.querySelector('.' + literals.movableContent);\n                    var frozenContent = _this.grid.element.querySelector('.' + literals.frozenContent);\n                    movableContent.style.height = frozenContent.style.height = 'auto';\n                }\n                _this.trigger(events.actionComplete, args);\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[\"\" + ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                    this.columns.push(keys[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[\"\" + guid] = this.editSettings[\"\" + guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[parseInt(i.toString(), 10)]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    case 'Indent':\n                    case ContextMenuItems.RowIndent:\n                        items.push({ text: this.l10n.getConstant('RowIndent'),\n                            target: '.e-content', iconCss: 'e-indent e-icons', id: this.element.id + '_gridcontrol_cmenu_Indent' });\n                        break;\n                    case 'Outdent':\n                    case ContextMenuItems.RowOutdent:\n                        items.push({ text: this.l10n.getConstant('RowOutdent'),\n                            target: '.e-content', iconCss: 'e-outdent e-icons', id: this.element.id + '_gridcontrol_cmenu_Outdent' });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[parseInt(i.toString(), 10)]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        if (this.columnModel.length === 0) {\n            index = index === 0 ? -1 : index;\n        }\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[parseInt(i.toString(), 10)].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[parseInt(i.toString(), 10)] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[parseInt(i.toString(), 10)];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[parseInt(i.toString(), 10)][\"\" + prop])) {\n                        gridColumn[\"\" + prop] = this.getGridColumns(column[parseInt(i.toString(), 10)][\"\" + prop], false, this.columnModel.length - 1);\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (this.initialRender && !isNullOrUndefined(treeColumn) && this.enablePersistence && prop === 'edit') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = treeColumn[\"\" + prop];\n                    }\n                    else if (!(treeColumn) || prop !== 'sortComparer') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[\"\" + stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n            if (!isNullOrUndefined(this.columnModel[this.treeColumnIndex]) && this.enableRtl) {\n                if (gridColumn.field === this.columnModel[this.treeColumnIndex].field) {\n                    if (isNullOrUndefined(this.treeColumnTextAlign)) {\n                        this.treeColumnTextAlign = this.columnModel[this.treeColumnIndex].textAlign;\n                        this.treeColumnField = this.columnModel[this.treeColumnIndex].field;\n                    }\n                    gridColumn.textAlign = 'Right';\n                }\n            }\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[\"\" + prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    this.TreeGridLocale();\n                    this.grid.toolbar = this.getGridToolbar();\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    if (!isNullOrUndefined(this.treeColumnField)) {\n                        this.updateTreeColumnTextAlign();\n                    }\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[\"\" + prop].mode &&\n                        (newProp[\"\" + prop].mode === 'Cell' || newProp[\"\" + prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    TreeGrid.prototype.updateTreeColumnTextAlign = function () {\n        var gridColumn = this.grid.getColumnByField(this.treeColumnField);\n        gridColumn.textAlign = this.enableRtl ? 'Right' : this.treeColumnTextAlign;\n        this.grid.refreshColumns();\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[parseInt(i.toString(), 10)]]) {\n                this[modules[parseInt(i.toString(), 10)]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[parseInt(k.toString(), 10)];\n                delete currentObject[\"\" + objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n                this.ignoreInArrays(ignoreOnColumn, columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[parseInt(i.toString(), 10)]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[\"\" + isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[\"\" + primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n        var visibleRecords = this.getVisibleRecords();\n        if (visibleRecords.length > 0 && key === (visibleRecords[visibleRecords.length - 1])[\"\" + primaryKey]) {\n            var table = this.getContentTable();\n            var sHeight = table.scrollHeight;\n            var clientHeight = this.getContent().clientHeight;\n            this.lastRowBorder(this.getRows()[currentRecords.indexOf(record)], sHeight <= clientHeight);\n        }\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        var columnModel = 'columnModel';\n        if (this.grid.columns.length !== this.columnModel.length) {\n            Columns = this.grid[\"\" + columnModel];\n        }\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[\"\" + columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[\"\" + prop] = gridColumns[parseInt(i.toString(), 10)][\"\" + prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[parseInt(i.toString(), 10)].field && this.columnModel[parseInt(i.toString(), 10)].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[parseInt(i.toString(), 10)].template = temp;\n                }\n            }\n        }\n        var deepMerge = 'deepMerge';\n        this[\"\" + deepMerge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            this.stackedHeader = true;\n        }\n        if (this.stackedHeader && this.allowResizing) {\n            for (var i = 0; i < this.columns.length; i++) {\n                if (!isNullOrUndefined(this.columns[parseInt(i.toString(), 10)].columns)) {\n                    for (var j = 0; j < this.columns[parseInt(i.toString(), 10)].columns.length; j++) {\n                        var stackedColumn = this.columns[parseInt(i.toString(), 10)]\n                            .columns[parseInt(j.toString(), 10)];\n                        var currentColumn = this.grid.getColumnByField(stackedColumn.field);\n                        stackedColumn.width = currentColumn.width;\n                    }\n                }\n                else if (!isNullOrUndefined(this.columns[parseInt(i.toString(), 10)].field)) {\n                    var fieldName = this.columns[parseInt(i.toString(), 10)].field;\n                    var currentColumn = this.grid.getColumnByField(fieldName);\n                    this.columns[parseInt(i.toString(), 10)].width = currentColumn.width;\n                }\n            }\n        }\n        if (!this.stackedHeader) {\n            merge(this.columns, this.columnModel);\n        }\n        this[\"\" + deepMerge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[\"\" + persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[\"\" + persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                dRows.push(rows[parseInt(i.toString(), 10)]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.grid.dataSource = this.flatData;\n            }\n            else {\n                this.grid.setProperties({\n                    dataSource: new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor)\n                }, true);\n            }\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[parseInt(i.toString(), 10)]);\n                if (!currentViewRecords[parseInt(i.toString(), 10)].expanded) {\n                    i += findChildrenRecords(currentViewRecords[parseInt(i.toString(), 10)]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if ((this.getBatchChanges()[this.changedRecords].length || this.getBatchChanges()[this.deletedRecords].length ||\n                this.getBatchChanges()[this.addedRecords].length) && this.editSettings.showConfirmDialog) {\n                var dialogObj = this.grid.editModule[\"\" + obj];\n                this.grid.editModule[\"\" + showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo_1 = this.grid.getRowInfo(target);\n            var record = rowInfo_1.rowData;\n            if (this.grid.isFrozenGrid() && this.enableVirtualization && !Object.keys(record).length) {\n                var freezeRows = 'freezeRows';\n                record = this.grid.contentModule[\"\" + freezeRows].filter(function (e) { return e.uid === rowInfo_1.row.getAttribute('data-uid'); })[0].data;\n            }\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo_1.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo_1.row, record);\n            }\n            else {\n                this.expandRow(rowInfo_1.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (expandingArgs.expandAll) {\n                    _this.expandCollapseAllChildren(record, 'expand', key, level);\n                }\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[\"\" + children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, true);\n                    }\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[parseInt(i.toString(), 10)]);\n        }\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            if (this.detailTemplate) {\n                record = this.grid.getCurrentViewRecords()[row.getAttribute('data-rowindex')];\n            }\n            else {\n                record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n            }\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                if (collapsingArgs.collapseAll) {\n                    _this.expandCollapseAllChildren(record, 'collapse', key);\n                }\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    if (!isNullOrUndefined(_this.expandStateMapping)) {\n                        _this.updateExpandStateMapping(collapseArgs.data, false);\n                    }\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.updateExpandStateMapping = function (record, state) {\n        var totalRecords = record;\n        if (totalRecords.length) {\n            for (var i = 0; i < totalRecords.length; i++) {\n                totalRecords[parseInt(i.toString(), 10)][this.expandStateMapping] = state;\n                editAction({ value: totalRecords[parseInt(i.toString(), 10)], action: 'edit' }, this, this.isSelfReference, totalRecords[parseInt(i.toString(), 10)].index, this.grid.selectedRowIndex, this.expandStateMapping);\n            }\n        }\n        else {\n            record[\"\" + this.expandStateMapping] = state;\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, this.expandStateMapping);\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[parseInt(i.toString(), 10)].parentItem)) {\n                var puniqueID_1 = record[parseInt(i.toString(), 10)].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[parseInt(i.toString(), 10)], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[\"\" + primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[parseInt(i.toString(), 10)], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[\"\" + endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                for (var i = 0; i < rows.length; i++) {\n                    if (action === 'collapse') {\n                        this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                    }\n                    else {\n                        this.expandRow(rows[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.expandRow(rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var _this = this;\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if ((!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) || (action === 'collapse' || (this.isExpandAll && this.loadChildOnDemand) && !isRemoteData(this) && this.isSelfReference && isCountRequired(this))) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[parseInt(rowIndex.toString(), 10)];\n        }\n        else {\n            rowIndex = +row.getAttribute('data-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            row.querySelectorAll('.e-treerowcell')[0].setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n                var lastrowIdx = this.getVisibleRecords()[this.getVisibleRecords().length - 1]['index'];\n                var lastRow = this.getRowByIndex(lastrowIdx);\n                if (this.grid.getContentTable().clientHeight <= this.grid.getContent().clientHeight && !isNullOrUndefined(lastRow) && !lastRow.cells[0].classList.contains('e-lastrowcell')) {\n                    this.lastRowBorder(lastRow, true);\n                }\n            }\n            if (isCountRequired(this) && action === 'expand') {\n                var currentData = this.getCurrentViewRecords();\n                var visibleRecords = currentData.filter(function (e) {\n                    return getExpandStatus(_this, e, _this.parentData);\n                });\n                this.dataResults.result = visibleRecords;\n            }\n            if (!isNullOrUndefined(targetEle) && targetEle.closest('.e-treerowcell').classList.contains('e-cellselectionbackground')) {\n                targetEle.closest('.e-treerowcell').classList.remove('e-cellselectionbackground');\n                targetEle.closest('.e-treerowcell').removeAttribute('aria-selected');\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i >= 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        if (expandingArgs.requestType === 'collapse' && isCountRequired(this)) {\n            var flatDataRecords = this.flatData.slice();\n            for (var i = 0; i < flatDataRecords.length; i++) {\n                if (flatDataRecords[parseInt(i.toString(), 10)]['parentUniqueID'] === expandingArgs.data['uniqueID']) {\n                    flatDataRecords.splice(i, 1);\n                    i = i - 1;\n                }\n            }\n            this.dataResults.result = flatDataRecords;\n            return;\n        }\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[\"\" + childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                if (isCountRequired(_this)) {\n                    _this.flatData = _this.dataResults.result;\n                }\n                if (_this.enableInfiniteScrolling && isCountRequired(_this)) {\n                    _this.flatData = _this.infiniteScrollData;\n                }\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[parseInt(i.toString(), 10)].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[parseInt(i.toString(), 10)]) {\n                        childData[parseInt(i.toString(), 10)].level = record.level + 1;\n                        childData[parseInt(i.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        childData[parseInt(i.toString(), 10)].parentItem = extend({}, record);\n                        childData[parseInt(i.toString(), 10)].taskData = extend({}, childData[parseInt(i.toString(), 10)]);\n                        delete childData[parseInt(i.toString(), 10)].parentItem.childRecords;\n                        delete childData[parseInt(i.toString(), 10)].taskData.parentItem;\n                        childData[parseInt(i.toString(), 10)].parentUniqueID = record.uniqueID;\n                        childData[parseInt(i.toString(), 10)].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[parseInt(i.toString(), 10)].uniqueID, childData[parseInt(i.toString(), 10)], _this);\n                        if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][_this.childMapping]) ||\n                            (childData[parseInt(i.toString(), 10)][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[parseInt(i.toString(), 10)].hasChildRecords = true;\n                        }\n                        if (isCountRequired(_this) && record[_this.childMapping] && record[_this.childMapping][parseInt(i.toString(), 10)]) {\n                            currentData.splice(index + 1 + i, 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                        else {\n                            currentData.splice(index + 1 + i, record[_this.childMapping] &&\n                                record[_this.childMapping][parseInt(i.toString(), 10)] ? 1 : 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[parseInt(index.toString(), 10)][\"\" + _this.childMapping] = childData;\n                currentData[parseInt(index.toString(), 10)].childRecords = childData;\n                currentData[parseInt(index.toString(), 10)].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[parseInt(index.toString(), 10)].uniqueID, currentData[parseInt(index.toString(), 10)], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[parseInt(j.toString(), 10)]);\n                }\n            }\n            if (isCountRequired(_this) && _this.loadChildOnDemand && expandingArgs.requestType === 'expand') {\n                _this.dataResults['expandRecord'] = {};\n                _this.dataResults['expandRecord'] = expandingArgs.data;\n            }\n            _this.isExpandRefresh = true;\n            var scrollHeightBeforeRefresh = _this.getContentTable().parentElement.scrollTop;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            if (_this.enableInfiniteScrolling) {\n                _this.getContentTable().parentElement.scrollTop = scrollHeightBeforeRefresh;\n            }\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        var fetchRemoteChildData = 'fetchRemoteChildData';\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return ((r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1))) || (r.querySelector('.e-gridrowindex' + record.index + 'level0' + '.e-summarycell')));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else if (action === 'collapse' && this.enableVirtualization) {\n            this.dataModule[\"\" + fetchRemoteChildData]({ action: action, record: args.data, rows: null, parentRow: args.row });\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[parseInt(i.toString(), 10)][\"\" + primaryKeyField]);\n                rows.push(this.getRows()[parseInt(rowIndex.toString(), 10)]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var gridRowsObject = this.grid.getRowsObject();\n        var currentViewData = this.getCurrentViewRecords();\n        var currentRecord = currentViewData.filter(function (e) {\n            return e.uniqueID === record.uniqueID;\n        });\n        var currentIndex = currentViewData.indexOf(currentRecord[0]);\n        if (!isNullOrUndefined(gridRowsObject[parseInt(currentIndex.toString(), 10)].visible) &&\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible !== false) {\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = true;\n        }\n        var detailrows = gridRows.filter(function (r) {\n            return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)])) {\n                rows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization\n                || this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[rows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                var parentRecord = currentViewData.filter(function (e) {\n                    return e.uniqueID === currentRecord[0].parentUniqueID;\n                });\n                if (!isNullOrUndefined(parentRecord[0]) && gridRows[currentViewData.indexOf(parentRecord[0])].getElementsByClassName('e-treegridcollapse').length) {\n                    gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = false;\n                }\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[parseInt(i.toString(), 10)] });\n            if ((!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) && childRecords[parseInt(i.toString(), 10)].childRecords.length > 0) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].expanded) || childRecords[parseInt(i.toString(), 10)].expanded)) {\n                this.expandCollapse(action, rows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                }\n            }\n        }\n        for (var i = 0; i < detailrows.length; i++) {\n            if (!isNullOrUndefined(detailrows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization ||\n                this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[detailrows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                detailrows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n        }\n        if (!this.allowPaging && !(this.enableVirtualization || this.enableInfiniteScrolling || isRemoteData(this)\n            || isCountRequired(this))) {\n            this.grid.notify('refresh-Expand-and-Collapse', { rows: this.grid.getRowsObject() });\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[parseInt(i.toString(), 10)];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        var rows = this.getContentTable().rows;\n        rows = [].slice.call(rows);\n        for (var i = 0; i < rows.length; i++) {\n            var rcell = this.grid.getContentTable().rows[parseInt(i.toString(), 10)]\n                .cells[this.treeColumnIndex];\n            var row = rows[parseInt(i.toString(), 10)];\n            var rowData = this.grid.getRowsObject()[parseInt(i.toString(), 10)].data;\n            var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n            this.renderModule.cellRender(arg);\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].style.display = 'none';\n            row = rows[parseInt(i.toString(), 10)];\n            var collapsingTd = rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[parseInt(i.toString(), 10)].style.display = 'none';\n                rightrows[parseInt(i.toString(), 10)].style.display = 'none';\n                if (!rows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[parseInt(i.toString(), 10)];\n                    }\n                    else if (rightrows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * Method to sanitize html element\n     *\n     * @param {any} value - Specifies the html value to sanitize\n     * @returns {any} Returns the sanitized html value\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeGrid.prototype.sanitize = function (value) {\n        if (this.enableHtmlSanitizer && typeof (value) === 'string') {\n            return SanitizeHtmlHelper.sanitize(value);\n        }\n        return value;\n    };\n    /**\n     * Updates the rows and cells\n     *\n     * @param {Object[]} records - Updates the given records\n     * @param {HTMLTableRowElement[]} rows - Updates the given rows\n     * @param {number} index -  Updates the given cell index\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRowAndCellElements = function (records, rows, index) {\n        for (var i = 0; i < records.length; i++) {\n            this.renderModule.cellRender({\n                data: records[parseInt(i.toString(), 10)], cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                column: this.grid.getColumns()[this.treeColumnIndex],\n                requestType: 'rowDragAndDrop'\n            });\n            if (this['action'] === 'indenting' || this['action'] === 'outdenting') {\n                this.renderModule.RowModifier({\n                    data: records[parseInt(i.toString(), 10)], row: rows[parseInt(i.toString(), 10)]\n                });\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[parseInt(j.toString(), 10)].columns) {\n                cnt = this.getFrozenCount(cols[parseInt(j.toString(), 10)].columns, cnt);\n            }\n            else {\n                if (cols[parseInt(j.toString(), 10)].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Indents the record to one level of hierarchy. Moves the selected row as the last child of its previous row.\n     *\n     * @param {Object} record – specifies the record to do indented\n     * @returns {void}\n     */\n    TreeGrid.prototype.indent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'indent');\n        }\n    };\n    /**\n     * Outdent the record to one level of hierarchy. Moves the selected row as sibling to its parent row.\n     *\n     * @param {Object} record – specifies the record to do outdented\n     * @returns {void}\n     */\n    TreeGrid.prototype.outdent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'outdent');\n        }\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, LoadingIndicator)\n    ], TreeGrid.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableVirtualMaskRow\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[\"\" + columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[parseInt(f.toString(), 10)]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[\"\" + dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[parseInt(i.toString(), 10)]).rowIndex;\n                data[parseInt(i.toString(), 10)] = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[\"\" + action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                var parentrow = this.parent.getRows()[parseInt(toIndex.toString(), 10)];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[\"\" + action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[\"\" + primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].taskData ===\n                            record_1.parentItem.taskData) {\n                            dropIndex = i;\n                            if (tObj.enableVirtualization) {\n                                dropIndex = parseInt(tObj.getRows()[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10);\n                            }\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[\"\" + action] = 'indenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].uniqueID === parentItem.uniqueID) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[parseInt(dropIndex.toString(), 10)].getAttribute('data-rowindex'), 10);\n                }\n                tObj[\"\" + action] = 'outdenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[parseInt(i.toString(), 10)].index = i;\n            if (!isNullOrUndefined(currentData[parseInt(i.toString(), 10)].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[parseInt(i.toString(), 10)].parentUniqueID, this.parent);\n                currentData[parseInt(i.toString(), 10)].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[parseInt(i.toString(), 10)];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[parseInt(i.toString(), 10)];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[parseInt(j.toString(), 10)]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[parseInt(j.toString(), 10)]);\n                            childData[parseInt(j.toString(), 10)].taskData = extend({}, childData[parseInt(j.toString(), 10)]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[parseInt(i.toString(), 10)].uniqueID, dragRecords[parseInt(i.toString(), 10)], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[parseInt(i.toString(), 10)];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[parseInt(i.toString(), 10)][this.parent.childMapping] ===\n                    droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][parseInt(i.toString(), 10)]\n                        = childRecords[parseInt(i.toString(), 10)].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[parseInt(i.toString(), 10)].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        var sanitize = 'sanitize';\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = this.parent[\"\" + sanitize](errorVal.innerHTML);\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = this.parent[\"\" + sanitize](content);\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[parseInt(i.toString(), 10)].classList.add(className);\n            }\n            else {\n                cells[parseInt(i.toString(), 10)].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[parseInt(rowIdx.toString(), 10)];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][\"\" + parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField]);\n            var row = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[\"\" + primaryKeyField]);\n                var parentrow = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[parseInt(i.toString(), 10)],\n                        cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[parseInt(index.toString(), 10)],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[parseInt(i.toString(), 10)] = records[parseInt(i.toString(), 10)].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[parseInt(i.toString(), 10)].hasChildRecords) {\n                        actualData.push(records[parseInt(i.toString(), 10)]);\n                        var child = findChildrenRecords(records[parseInt(i.toString(), 10)]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[parseInt(i_1.toString(), 10)]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[parseInt(i.toString(), 10)].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[parseInt(i.toString(), 10)].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[parseInt(i.toString(), 10)].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[parseInt(i.toString(), 10)].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][\"\" + primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[parseInt(i.toString(), 10)];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            if (this_1.parent.enableImmutableMode || this_1.parent['isIndentEnabled'] && !this_1.parent.parentIdMapping) {\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[parseInt(recordIndex1.toString(), 10)].level;\n            this.treeGridData.splice(parseInt(recordIndex1.toString(), 10), 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                    droppedRecord.taskData[\"\" + childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[\"\" + isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, tObj);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, this.parent);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping]\n                        === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[parseInt(j.toString(), 10)][\"\" + primaryKeyField] === deletedRow[\"\" + primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[parseInt(i_2.toString(), 10)][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[parseInt(i_3.toString(), 10)][this.parent.idMapping]\n                    === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                if (!((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                    && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent))\n                    || notifyArgs.virtualInfo.blockIndexes.length === 1) {\n                    notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n                }\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[parseInt(r.toString(), 10)].index = (this.visualData).indexOf(rows[parseInt(r.toString(), 10)].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[\"\" + model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[parseInt(currentPage.toString(), 10)] &&\n                this.cache[parseInt(currentPage.toString(), 10)].length >\n                    (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[parseInt(currentPage.toString(), 10)];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[parseInt(f.toString(), 10)];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[parseInt(count.toString(), 10)].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[parseInt(count.toString(), 10)].uniqueID)) {\n                    this.filteredResult.push(childRec[parseInt(count.toString(), 10)]);\n                    setValue('uniqueIDFilterCollection.' + childRec[parseInt(count.toString(), 10)].uniqueID, childRec[parseInt(count.toString(), 10)], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[parseInt(count.toString(), 10)]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[parseInt(count.toString(), 10)]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID, true);\n                record[parseInt(c.toString(), 10)].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[parseInt(c.toString(), 10)].filterLevel = 0;\n                this.filteredParentRecs.push(record[parseInt(c.toString(), 10)]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[parseInt(count.toString(), 10)];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[parseInt(i.toString(), 10)].rows) {\n                workbook.worksheets[parseInt(i.toString(), 10)].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        this.parent.flatData.map(function (e) { return e.expanded = e.uniqueID === rowDetails.record.uniqueID &&\n            e.expanded !== rowDetails.record.expanded ? rowDetails.record.expanded : e.expanded; });\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[\"\" + primaryKeyField_1] === rowDetails.record[\"\" + primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[\"\" + action] === 'collapse') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[\"\" + action] === 'expand') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[parseInt(t.toString(), 10)]);\n            var res = [];\n            if (temp[parseInt(t.toString(), 10)].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[parseInt(t.toString(), 10)].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.updatePageSize = function (pageingDetails) {\n        var updateSize = pageingDetails.result.length;\n        var gridPagerModule = this.parent.grid.pagerModule;\n        if (this.parent.pageSettings.pageSizes === true) {\n            if (gridPagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === gridPagerModule.pagerObj.getLocalizedLabel('All')) {\n                gridPagerModule['pagerObj'].totalRecordsCount = updateSize;\n                this.parent.grid.pageSettings.pageSize = updateSize;\n            }\n        }\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            this.updatePageSize(pageingDetails);\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.rowDeselected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.rowDeselected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var toolbarElement = this.parent.grid.toolbarModule.getToolbar();\n        if (!isNullOrUndefined(toolbarElement)) {\n            var tObj = this.parent;\n            var indentElement = void 0;\n            var outdentElement = void 0;\n            var indentID = tObj.element.id + '_gridcontrol_indent';\n            var outdentID = tObj.element.id + '_gridcontrol_outdent';\n            var indentEle = toolbarElement.querySelector('#' + indentID);\n            var outdentEle = toolbarElement.querySelector('#' + outdentID);\n            var row = args.row;\n            var selectedrow = tObj.getSelectedRows()[0];\n            if (!isNullOrUndefined(row[0])) {\n                row = row[0];\n            }\n            row = (!isNullOrUndefined(selectedrow) && selectedrow.rowIndex !== row.rowIndex) ? selectedrow : row;\n            if (indentEle !== null && outdentEle !== null) {\n                indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n                outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n                if (row.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indentElement.classList.add('e-hidden');\n                    outdentElement.classList.add('e-hidden');\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[row.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[row.rowIndex - 1].level)) {\n                            indentElement.classList.add('e-hidden');\n                        }\n                        else {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === tObj.getCurrentViewRecords()[row.rowIndex - 1].level) {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === 0) {\n                            outdentElement.classList.add('e-hidden');\n                        }\n                        if (selectedItem.level !== 0) {\n                            outdentElement.classList.remove('e-hidden');\n                        }\n                    }\n                }\n                if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                    if (this.parent.toolbar['includes']('Indent')) {\n                        indentElement.classList.add('e-hidden');\n                    }\n                    if (this.parent.toolbar['includes']('Outdent')) {\n                        outdentElement.classList.add('e-hidden');\n                    }\n                }\n            }\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        var indentOutdentAction = 'indentOutdentAction';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'indent');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'outdent');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[parseInt(p.toString(), 10)]);\n            if (!summaryRow) {\n                parentData.push(filteredData[parseInt(p.toString(), 10)]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[parseInt(i.toString(), 10)];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[parseInt(i_1.toString(), 10)]))) ?\n                                columns[parseInt(i_1.toString(), 10)] : getObject('field', (columns[parseInt(i_1.toString(), 10)]));\n                            item[\"\" + field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[parseInt(columnIndex.toString(), 10)])) ?\n                    columns[parseInt(columnIndex.toString(), 10)] : getObject('field', columns[parseInt(columnIndex.toString(), 10)]);\n                items[\"\" + fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[parseInt(i.toString(), 10)];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[parseInt(i.toString(), 10)].columnName) ?\n                summary.columns[parseInt(i.toString(), 10)].field : summary.columns[parseInt(i.toString(), 10)].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[parseInt(i.toString(), 10)];\n            var key = summaryColumn.field + ' - ' + types[parseInt(i.toString(), 10)].toLowerCase();\n            var val = types[parseInt(i.toString(), 10)] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[parseInt(i.toString(), 10)], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[parseInt(i.toString(), 10)] !== 'Custom' ? val[\"\" + key] : val;\n            single[\"\" + disp] = single[\"\" + disp] || {};\n            single[\"\" + disp][\"\" + key] = value_1;\n            single[\"\" + disp][types[parseInt(i.toString(), 10)]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[\"\" + renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[\"\" + summaryColumn.columnName][\"\" + summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[parseInt(d.toString(), 10)].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n            }\n            if (data[parseInt(d.toString(), 10)].hasChildRecords) {\n                var childSort = (new DataManager(data[parseInt(d.toString(), 10)].childRecords)\n                    .executeLocal(srtQry));\n                if (this.parent.allowRowDragAndDrop && data[parseInt(d.toString(), 10)].childRecords.indexOf(this.parent.rowDragAndDropModule['draggedRecord']) !== -1 && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                    var dragdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                    childSort.splice(dragdIndex, 1);\n                    var dropdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                    if (this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                        childSort.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                    else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                        childSort.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                }\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        var indent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Indent', args.element);\n        var outdent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Outdent', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false || this.parent.grid.isEdit) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n        var tObj = this.parent;\n        var selectedrow = tObj.getSelectedRows()[0];\n        if ((indent || outdent) && !isNullOrUndefined(selectedrow)) {\n            var targetElement = args.event.target.closest('td');\n            if (isNullOrUndefined(targetElement) || (!isNullOrUndefined(targetElement) && !targetElement.classList.contains('e-rowcell'))) {\n                indent.style.display = outdent.style.display = 'none';\n            }\n            else {\n                if (selectedrow.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indent.style.display = outdent.style.display = 'none';\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[selectedrow.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            indent.style.display = 'none';\n                        }\n                        else {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) && this.parent.editSettings.mode !== 'Batch'\n                            && this.parent.editSettings.mode !== 'Cell') {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === 0) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            outdent.style.display = 'none';\n                        }\n                        else {\n                            outdent.style.display = 'block';\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (tObj.grid.isEdit && isNullOrUndefined(selectedrow)) {\n                indent.style.display = 'none';\n                outdent.style.display = 'none';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.editModule['isAddedRowByContextMenu'] = true;\n            this.parent.addRecord();\n        }\n        if (args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' || args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Outdent') {\n            if (!isNullOrUndefined(this.parent.rowDragAndDropModule)) {\n                var indentOutdentAction = 'indentOutdentAction';\n                var action = args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' ? 'indent' : 'outdent';\n                this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, action);\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.column.index;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount === this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.column.index)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.column.index)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem]) {\n                        parentUniqueID = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].edit === 'add') {\n                merge(this.currentViewRecords[parseInt(rowObjectIndex.toString(), 10)], this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[\"\" + isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[\"\" + isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex]\n                : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[parseInt(i.toString(), 10)]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[\"\" + primarykey]; }).indexOf(records[parseInt(i.toString(), 10)][\"\" + primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[parseInt(i.toString(), 10)])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[\"\" + addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                if (this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey] === records[parseInt(this.addRowIndex.toString(), 10)][\"\" + primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[\"\" + changeRecords];\n        if (e.batchChanges[\"\" + changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[parseInt(i.toString(), 10)], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[\"\" + deleterecords].length) {\n            var deletedRecords = e.batchChanges[\"\" + deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(record[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                e.batchChanges[\"\" + deleterecords] = e.batchChanges[\"\" + deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem] ? this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]\n                        : this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        var children = currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[parseInt(j.toString(), 10)][\"\" + primaryKey] === this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]) {\n                                currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[\"\" + targetElement])) {\n            var row = this.parent[\"\" + targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[\"\" + targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] === 0 ? this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] :\n                        this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(positionIndex, 0, this.batchDeletedRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[\"\" + addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[parseInt(i_1.toString(), 10)].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                            .indexOf(currentViewRecords[0][\"\" + primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[parseInt(i.toString(), 10)]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[parseInt(i.toString(), 10)].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[parseInt(i.toString(), 10)];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[parseInt(i.toString(), 10)].parentItem, 'add', this.parent, this.isSelfReference, addRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[parseInt(i.toString(), 10)], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                        .indexOf(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primarykey_1]);\n                    var children = currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[parseInt(j.toString(), 10)][\"\" + primarykey_1] === addRecords[parseInt(i.toString(), 10)][\"\" + primarykey_1]) {\n                            currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[\"\" + deletedRecords].length) {\n                for (i = 0; i < batchChanges[\"\" + deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[\"\" + deletedRecords][parseInt(i.toString(), 10)], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[parseInt(i_2.toString(), 10)][\"\" + index] = i_2;\n                setValue('uniqueIDCollection.' + data[parseInt(i_2.toString(), 10)][\"\" + uniqueID] + '.index', i_2, this.parent);\n                if (!data[parseInt(i_2.toString(), 10)][\"\" + level]) {\n                    this.parent.parentData.push(data[parseInt(i_2.toString(), 10)]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[parseInt(i.toString(), 10)][\"\" + index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[\"\" + index] = this.parent.getSelectedRows()[0][\"\" + rowIndex];\n        }\n        else {\n            args[\"\" + index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[parseInt(i.toString(), 10)].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[\"\" + updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n        else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[\"\" + promise];\n        delete args[\"\" + promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[\"\" + editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[\"\" + eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['virtualData'] = {};\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[parseInt(rowIndex.toString(), 10)].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[parseInt(i.toString(), 10)].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[\"\" + key] === data[parseInt(i.toString(), 10)][\"\" + key]) {\n                if (details.action === 'add') {\n                    data[parseInt(i.toString(), 10)].level = this.internalProperties.level;\n                    data[parseInt(i.toString(), 10)].taskData = this.internalProperties.taskData;\n                    data[parseInt(i.toString(), 10)].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[parseInt(i.toString(), 10)].parentItem = this.internalProperties.parentItem;\n                        data[parseInt(i.toString(), 10)].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[parseInt(i.toString(), 10)].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID, data[parseInt(i.toString(), 10)], this.parent);\n            }\n            if (!data[parseInt(i.toString(), 10)].level) {\n                this.parent.parentData.push(data[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[parseInt(j.toString(), 10)];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[parseInt(l.toString(), 10)].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[parseInt(count.toString(), 10)];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[parseInt(k.toString(), 10)];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[parseInt(treeColIndex.toString(), 10)];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[parseInt(l.toString(), 10)];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[parseInt(index.toString(), 10)]) &&\n                    records[parseInt(index.toString(), 10)].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[\"\" + r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][\"\" + position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[\"\" + r].splice(0, 1);\n                    this.parent.grid.contentModule[\"\" + r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][\"\" + position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][\"\" + position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[\"\" + frows].splice(0, 1);\n                        this.parent.grid.contentModule[\"\" + frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[parseInt(i.toString(), 10)].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    focussedElement.focus();\n                }\n                if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.parent.grid.contentModule['createEmptyRowdata']();\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[parseInt(i.toString(), 10)].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[\"\" + primaryKeys_2[0]] === args.data[parseInt(i.toString(), 10)][primaryKeys_2[0]]) {\n                            data_1[parseInt(i.toString(), 10)] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(data_1[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n                if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n                    this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n                }\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                currentData = this.parent.flatData;\n            }\n            else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n                this.selectedIndex = this.addRowIndex;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true :\n                this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n                        }\n                        else {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        }\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[parseInt(i.toString(), 10)].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[parseInt(i.toString(), 10)].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[parseInt(i.toString(), 10)]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[\"\" + visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[parseInt(i.toString(), 10)].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[parseInt(i.toString(), 10)].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[parseInt(i.toString(), 10)]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[parseInt(i.toString(), 10)].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[parseInt(i.toString(), 10)].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[\"\" + matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('data-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.getMovableVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, true);\n    };\n    VirtualTreeContentRenderer.prototype.getFrozenRightVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false, false, true);\n    };\n    VirtualTreeContentRenderer.prototype.getRowCollection = function (index, isMovable, isRowObject, isFrozenRight) {\n        var startIdx = parseInt(this.parent.getRows()[0].getAttribute(literals.dataRowIndex), 10);\n        var rowCollection = isMovable ? this.parent.getMovableDataRows() : this.parent.getDataRows();\n        rowCollection = isFrozenRight ? this.parent.getFrozenRightDataRows() : rowCollection;\n        var collection = isRowObject ? this.parent.getCurrentViewRecords() : rowCollection;\n        var selectedRow = collection[index - startIdx];\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n            if (!isRowObject) {\n                selectedRow = index <= this.parent.frozenRows ? rowCollection[parseInt(index.toString(), 10)]\n                    : rowCollection[(index - startIdx) + this.parent.frozenRows];\n            }\n            else {\n                selectedRow = index <= this.parent.frozenRows ?\n                    this.parent.getRowsObject()[parseInt(index.toString(), 10)].data : selectedRow;\n            }\n        }\n        return selectedRow;\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else if (this.parent.root.editSettings.newRowPosition !== 'Top' && this.parent.root.editModule.selectedIndex !== -1 || this.parent.root.editModule.selectedIndex !== -1) {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[\"\" + action]('data-ready', this.onDataReady, this);\n            this.parent[\"\" + action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction(), _this.parent);\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[\"\" + action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[\"\" + action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[\"\" + action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[\"\" + action]('edit-reset', this.resetIseditValue, this);\n            this.parent[\"\" + action]('get-virtual-data', this.getData, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[\"\" + action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[\"\" + action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[\"\" + action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[\"\" + virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                // To overcome the white space issue in last page when records collapsed\n                if (this.parent.isFrozenGrid() && e.count < Object.keys(this.parent.dataSource).length) {\n                    var width = this.parent.enableColumnVirtualization ?\n                        this.getColumnOffset(this.parent.columns.length - 1) + 'px' : '100%';\n                    var height = (this.parent.getRowHeight() * e.count) -\n                        (this.parent.getRowHeight() * this.parent.pageSettings.pageSize);\n                    getValue('virtualEle', this).setVirtualHeight(height, width);\n                }\n                if (!this.parent.enableColumnVirtualization && !this.parent.isFrozenGrid()) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || (this.isDataSourceChanged && (this.startIndex === -1 || this.startIndex === 0 && this['preStartIndex'] === 0))) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (!isNullOrUndefined(this.parent.getRowByIndex(0)) && this.parent.getRows().length && !this[\"\" + initialRowTop]) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[\"\" + initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[\"\" + initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[\"\" + dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[\"\" + rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[\"\" + containerRect])) {\n            this.observer[\"\" + containerRect] = this.observers[\"\" + containerRect];\n        }\n        if (isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule['addRowIndex'])) {\n            _super.prototype[\"\" + selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[parseInt(i.toString(), 10)]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        this['editedRowIndex'] = e.index;\n        var selector = '.e-row[data-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.dataRowIndex = addArgs.dataRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[\"\" + isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[\"\" + addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[\"\" + restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[\"\" + isAdd]) {\n            _super.prototype[\"\" + resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[\"\" + editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[\"\" + selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.editModule.addRecord(null, this.parent.root.editModule.selectedIndex);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[\"\" + getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.dataRowIndex = this.parent.root.editModule.selectedIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[\"\" + actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[\"\" + directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[\"\" + preventEvent] && !_this.parent.enableVirtualMaskRow) {\n                    _this.parent.showSpinner();\n                }\n                if (_this.parent.enableVirtualMaskRow && !_this[\"\" + preventEvent]) {\n                    setTimeout(function () {\n                        _this.parent.showMaskRow(current.axis);\n                        _this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n                    }, 0);\n                }\n                var height = _this.content.getBoundingClientRect().height;\n                var top_1 = _this.prevInfo.offsets ? _this.prevInfo.offsets.top : null;\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                var y = _this.getTranslateY(e.top, height, xAxis && top_1 === e.top ? _this.prevInfo : undefined, true);\n                if (!_this.parent.isFrozenGrid() || _this.parent.enableVirtualMaskRow) {\n                    if (_this.parent.enableVirtualMaskRow) {\n                        var upScroll = (e.top - _this.translateY) < 0;\n                        y = (Math.round(_this.translateY) > y && !upScroll) ? Math.round(_this.translateY) : y;\n                        _this.virtualEle.adjustTable(x, y);\n                    }\n                    else {\n                        _this.virtualEle.adjustTable(x, _this.translateY);\n                    }\n                    if (_this.parent.enableColumnVirtualization) {\n                        _this.header.virtualEle.adjustTable(x, 0);\n                    }\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        this['scrollAfterEdit']();\n        var info = scrollArgs.sentinel;\n        var rowHeight = this.parent.getRowHeight();\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * rowHeight;\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) + rowHeight >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        var currentViewData = this.parent.currentViewData;\n        var indexValue = 'index';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / rowHeight)\n                + Math.ceil(vHeight / rowHeight))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 && index !== this[\"\" + selectedRowIndex]) {\n                index = this[\"\" + selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            if (currentViewData.length && (currentViewData[0][\"\" + indexValue] >= this.parent.pageSettings.pageSize / 2) &&\n                ((currentViewData[0][\"\" + indexValue] - this.startIndex) < (this.parent.pageSettings.pageSize / 2))) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] - (this.parent.pageSettings.pageSize / 2);\n                this.endIndex = this.startIndex + this.parent.pageSettings.pageSize;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / rowHeight);\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[parseInt(rowPt.toString(), 10)]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('data-rowindex');\n            }\n            if (firsttdinx === 0) {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n            else {\n                this.translateY = (scrollArgs.offset.top - (outBuffer * rowHeight) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * rowHeight) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / rowHeight);\n            var isLastBlock = (this[\"\" + selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[\"\" + selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[\"\" + selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (currentViewData.length && this.startIndex > currentViewData[0][\"\" + indexValue] &&\n                ((this.startIndex - currentViewData[0][\"\" + indexValue]) < (this.parent.pageSettings.pageSize / 2))) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] + (this.parent.pageSettings.pageSize / 2);\n            }\n            if (scrollArgs.offset.top > (rowHeight * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (rowHeight * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left') ||\n            ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') && (downScroll || upScroll) || isCountRequired(this.parent))) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            this.requestType = 'virtualscroll';\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.showMaskRow(info.axis);\n                this.parent.addShimmerEffect();\n                this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n        else {\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.removeMaskRow();\n                this.parent.notify('removeGanttShimmer', { requestType: 'hideShimmer' });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent) || this.parent.isFrozenGrid()) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            if (isFrozen && ((isNullOrUndefined(this.requestType) && getValue('requestTypes', this).indexOf('isFrozen') === -1) ||\n                (this.parent.enableVirtualMaskRow && this.requestType === 'virtualscroll'))) {\n                getValue('requestTypes', this).push('isFrozen');\n                this.requestType = 'isFrozen';\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n            if (getValue('requestTypes', this).indexOf('isFrozen') !== -1) {\n                getValue('requestTypes', this).splice(getValue('requestTypes', this).indexOf('isFrozen'), 1);\n                this.requestType = this.requestType === 'isFrozen' ? undefined : this.requestType;\n            }\n            if (isFrozen && (!this.isExpandCollapse || this.translateY === 0)) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(0, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[\"\" + replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[\"\" + focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[\"\" + isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.dataRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[\"\" + isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[\"\" + restoreAdd].call(this);\n            _super.prototype[\"\" + ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback, instance) {\n        var containerRect = 'containerRect';\n        _super.prototype[\"\" + containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        if (getValue('options', this).movableContainer) {\n            var movableContainerRect = 'movableContainerRect';\n            _super.prototype[\"\" + movableContainerRect] = getValue('options', this).movableContainer.getBoundingClientRect();\n            EventHandler.add(getValue('options', this).movableContainer, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        }\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback, instance) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[\"\" + options].prevTop = this[\"\" + options].prevLeft = 0;\n        return function (e) {\n            var top = _this[\"\" + options].movableContainer ? _this[\"\" + options].container.scrollTop : e.target.scrollTop;\n            var left = _this[\"\" + options].movableContainer ? _this[\"\" + options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[\"\" + options].prevTop < top ? 'down' : 'up';\n            direction = _this[\"\" + options].prevLeft === left ? direction : _this[\"\" + options].prevLeft < left ? 'right' : 'left';\n            _this[\"\" + options].prevTop = top;\n            _this[\"\" + options].prevLeft = left;\n            var current = _this.sentinelInfo[\"\" + direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[\"\" + options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var check = _this.check(direction);\n            if (current.entered && (current.axis === 'X' || instance.enableVirtualMaskRow)) {\n                if (_this[\"\" + movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[\"\" + movableEle], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[\"\" + element], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced50;\n                if (current.axis === 'X') {\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    if ((instance.dataSource instanceof DataManager && instance.dataSource.dataSource.url !== undefined\n                        && !instance.dataSource.dataSource.offline && instance.dataSource.dataSource.url !== '') || isCountRequired(instance)\n                        || instance.enableVirtualMaskRow) {\n                        fn = instance.enableVirtualMaskRow ? debounced100 : fn;\n                        fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                    else {\n                        callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                }\n            }\n            _this[\"\" + fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' || requestType === 'searching' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length)) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else if (!this.parent['isExpandAll']) {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (!parentGrid.isFrozenGrid()) {\n            if (parentGrid.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n            }\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ColumnFreezeContentRenderer, FreezeContentRender, FreezeRowModelGenerator, RenderType } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { ColumnVirtualFreezeRenderer, setDebounce, VirtualFreezeHdrRenderer, VirtualFreezeRenderer } from '@syncfusion/ej2-grids';\nimport { TreeInterSectionObserver, VirtualTreeContentRenderer } from './virtual-tree-content-render';\nimport { getValue } from '@syncfusion/ej2-base';\n/**\n * VirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar VirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeRenderer, _super);\n    function VirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        FreezeContentRender.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var movableCont = this.getMovableContent();\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        if (this.parent.enableColumnVirtualization) {\n            this.virtualRenderer.virtualEle.movableContent = this.virtualRenderer.movableContent\n                = this.getPanel().querySelector('.' + literals.movableContent);\n            this.virtualRenderer.virtualEle.renderMovableWrapper(minHeight);\n            this.virtualRenderer.virtualEle.renderMovablePlaceHolder();\n            var tbl = movableCont.querySelector('table');\n            this.virtualRenderer.virtualEle.movableTable = tbl;\n            this.virtualRenderer.virtualEle.movableWrapper.appendChild(tbl);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movableWrapper);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movablePlaceholder);\n        }\n        this.virtualRenderer.virtualEle.wrapper.appendChild(this.getFrozenContent());\n        this.virtualRenderer.virtualEle.wrapper.appendChild(movableCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    /**\n     * @param {HTMLElement} target - specifies the target\n     * @param {DocumentFragment} newChild - specifies the newChild\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    /**\n     * @param {Object[]} data - specifies the data\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {Row<Column>[]} returns the row\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.generateRows = function (data, e) {\n        return _super.prototype.generateRows.call(this, data, e);\n    };\n    return VirtualTreeFreezeRenderer;\n}(VirtualFreezeRenderer));\nexport { VirtualTreeFreezeRenderer };\n/**\n * ColumnVirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar ColumnVirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(ColumnVirtualTreeFreezeRenderer, _super);\n    function ColumnVirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.serviceLoc = locator;\n        _this.eventListener('on');\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnVirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        ColumnFreezeContentRenderer.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var frozenRightCont = this.getFrozenRightContent();\n        var frzCont = this.getFrozenContent();\n        var movableCont = this.getMovableContent();\n        if (this.parent.getFrozenMode() === 'Right') {\n            frzCont = frozenRightCont;\n        }\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        _super.prototype['renderVirtualFrozenLeft'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenRight'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenLeftRight'].call(this, frzCont, movableCont, frozenRightCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    ColumnVirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    return ColumnVirtualTreeFreezeRenderer;\n}(ColumnVirtualFreezeRenderer));\nexport { ColumnVirtualTreeFreezeRenderer };\n/**\n * VirtualTreeFreezeHdrRenderer is used to render the virtual table within the frozen and movable header table\n *\n * @hidden\n */\nvar VirtualTreeFreezeHdrRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeHdrRenderer, _super);\n    function VirtualTreeFreezeHdrRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeHdrRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n    };\n    VirtualTreeFreezeHdrRenderer.prototype.rfshMovable = function () {\n        _super.prototype.rfshMovable.call(this);\n    };\n    return VirtualTreeFreezeHdrRenderer;\n}(VirtualFreezeHdrRenderer));\nexport { VirtualTreeFreezeHdrRenderer };\n","import { ColumnFreezeContentRenderer, ColumnFreezeHeaderRenderer, FreezeRender, parentsUntil, RenderType } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass, getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ColumnVirtualTreeFreezeRenderer, VirtualTreeFreezeRenderer, VirtualTreeFreezeHdrRenderer } from '../renderer/virtual-tree-freeze-render';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n        this.parent.grid.on('initial-load', this.instantiateRenderer, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n        this.parent.grid.off('initial-load', this.instantiateRenderer);\n    };\n    Freeze.prototype.instantiateRenderer = function () {\n        var renderer = getValue('serviceLocator', this.parent.grid).getService('rendererFactory');\n        if (this.parent.getFrozenColumns()) {\n            if (this.parent.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualTreeFreezeHdrRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new FreezeRender(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new VirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n        if (this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenRightColumnsCount()) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new ColumnFreezeHeaderRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnVirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnFreezeContentRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            var rData = this.parent.grid.getRowObjectFromUID(row.getAttribute('data-Uid')).data;\n            if (!isNullOrUndefined(movableRows) && row.parentElement.firstElementChild.clientHeight > 0) {\n                row.style.height = row.parentElement.firstElementChild.clientHeight + 'px';\n            }\n            row.style.display = args.action;\n            if (freeze && frozenRightRows.length) {\n                frozenRightRows[parseInt(i.toString(), 10)].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[row.rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length) {\n                    var data = this.parent.getCurrentViewRecords()[cRow[0].rowIndex];\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action, record: data });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell' && (!e.target['classList'].contains('e-treegridcollapse') && !e.target['classList'].contains('e-treegridexpand'))) {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getExpandStatus } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[\"\" + generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[parseInt(i.toString(), 10)], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            else {\n                rows[args.index + i + 1][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[parseInt(i.toString(), 10)]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    InfiniteScroll.prototype.collapseExpandInfinitechilds = function (row) {\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var infiniteParents = dm.executeLocal(new Query().where(expanded));\n        var visualData = infiniteParents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, infiniteParents);\n        });\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    if ((pageingDetails.actionArgs['action'] === 'expand' || pageingDetails.actionArgs['action'] === 'collapse') && this.parent.grid.pageSettings.currentPage !== 1) {\n                        current = 1;\n                        size = this.parent.grid.pageSettings.pageSize * this.parent.grid.pageSettings.currentPage;\n                    }\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[\"\" + keyField] === data[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[\"\" + resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[parseInt(index.toString(), 10)]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[\"\" + addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[parseInt(i.toString(), 10)], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[parseInt(newRowIndex.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[parseInt(newRowIndex.toString(), 10)][\"\" + position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[\"\" + addRowIndex]][\"\" + position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger, index.InfiniteScroll);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","parseInt","toString","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","filter","item","isSummaryRow","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","e","p","enableImmutableMode","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","updatedParent","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","renderModule","cellRender","cell","cells","column","getColumns","requestType","RowModifier","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","LoadingIndicator","_super","apply","Property","ChildProperty","Predicate","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","TreeClipboard","serviceLocator","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","searchingRecords","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","aria-label","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkBoxRecord","hasFilteredChildRecords","checkAll","multiFilterCheckState","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","chkstate","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","rowsObj","getRowsObject","visible","proxy_1","parentrec","rowDragAndDropModule","getContentTable","scrollHeight","getContent","clientHeight","getVisibleRecords","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","summaryData","template","rowTemplate","treeColumn","colindex","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","refreshReactColumnTemplateByUid","columnUid","clearTemplate","undefined","indent","getIndentCount","cellIndex","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","td","getCellFromIndex","refreshTD","treecell","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","searchString","expands","loadChildOnDemand","isExpandCollapse","this_1","childRecords_1","parent_1","getUid","Math","ceil","random","aggregates","summaryQuery","q","fn","summaryModule","calculateSummaryValue","rowDetails","isChild","gridRows","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","take","pageSize","expandDetail","showSpinner","currentViewData","inx","haveChild","gridQuery","aggregateQuery","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","sortBy","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","dragdIndex","dropdIndex","sortArgs","temp","paging","printMode","actArgs","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","indentOutdentAction","modifiedRecords","stackedHeader","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","infiniteScrollData","remoteCollapsedData","remoteExpandedData","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","freezePresent","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","IsRowDDInjected","isIndentEnabled","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","portals","isVue","vueInstance","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","refreshToolbarItems","renderComplete","destroyTemplateFn","toolbarElement","toolbarModule","getToolbar","indentID","outdentID","indentElement","outdentElement","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableVirtualMaskRow","loadingIndicator","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","enableHtmlSanitizer","triggerEvents","IsExpandCollapseClicked","checkboxOnly","bindGridEvents","rowSelecting","rowDeselecting","rowSelected","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","persistSelection","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","cellSaved","cellEdit","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","actionBegin","dataManager","isQueryInvokedFromData","callBackPromise_2","actionComplete","updateTreeGridModel","ag","showChildSummary","refresh","selectedItem_1","selectedRecords","dropIndex","dropPosition","selectedRows","isFrozenGrid","movableContent","frozenContent","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","iconCss","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","enablePersistence","treeColumnTextAlign","textAlign","treeColumnField","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","updateTreeColumnTextAlign","closeEdit","getColumnByField","treeGridElement","hasTreeGridChild","removeListener","dataBind","document","getElementById","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","val","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","visibleRecords","sHeight","goToPage","pageNo","pagerModule","updateExternalMessage","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","currentColumn","stackedColumn","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","rowInfo_1","getCollapseExpandRecords","expandingArgs","expandCollapse","expandCollapseAllChildren","collapseArgs","setHeightForFrozenContent","updateExpandStateMapping","freeze","refreshScrollOffset","collapsingArgs","firstElementChild","scrollTop","getRowHeight","scrollBy","state","totalRecords","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","puniqueID_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","lastrowIdx","lastRow","removeAttribute","flatDataRecords","deff","data_1","length_1","scrollHeightBeforeRefresh","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","getMovableRows","getFrozenRightRows","gridRowsObject","currentIndex","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","sanitize","SanitizeHtmlHelper","updateRowAndCellElements","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","outdent","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","hasDropItem","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropRows","orderToIndex","dropData","totalRecord","parentrow","request","selectedItemIndex","selectedItem","selectedRow","selectedRecord","record_1","eventTrigger","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","islastRowIndex","isEmptyRow","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","getBoundingClientRect","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","errorelem","errorValue","setStyleAttribute","border","box","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","isByMethod","draggedRecord_2","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","url","blockIndexes","getBlockIndexes","checkAndResetCache","clear","cache","movableCache","frozenRightCache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","updatePageSize","pageingDetails","updateSize","gridPagerModule","pageSizes","pagerObj","pagerdropdownModule","getLocalizedLabel","propname","skip","size","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","indentEle","outdentEle","selectedrow","isCheckBoxSelection","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","event","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","newlyAddedRecords","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","mRows","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","endIndex","rowPosition","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","dataRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","newlyAddedRecord","seletedRow","beginAddEdit","primaryKeys_2","selector","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","getMovableVirtualRowByIndex","getRowCollection","getFrozenRightVirtualRowByIndex","isMovable","isRowObject","isFrozenRight","startIdx","rowCollection","virtualOtherAction","indexModifier","setTop","nextSetResIndex","lastIndex","root","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","getColumnOffset","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","gridTop","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","showMaskRow","axis","top_1","offsets","xAxis","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","upScroll","virtualEle","adjustTable","header","sentinel","outBuffer","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","addShimmerEffect","removeMaskRow","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","name","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","instance","virtualScrollHandlers","movableContainer","delay","debounced100","debounce","debounced50","prevTop","prevLeft","scrollbar","delta","clearTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","VirtualTreeFreezeRenderer","freezeRowGenerator","FreezeRowModelGenerator","virtualRenderer","serviceLoc","getRenderer","virtualHdrRenderer","FreezeContentRender","setPanel","movableCont","getMovableContent","minHeight","overflowX","renderFrozenWrapper","renderFrozenPlaceHolder","renderMovableWrapper","renderMovablePlaceHolder","tbl","movableTable","movableWrapper","movablePlaceholder","wrapper","getFrozenContent","setDebounce","movableEle","VirtualFreezeRenderer","ColumnVirtualTreeFreezeRenderer","ColumnFreezeContentRenderer","frozenRightCont","getFrozenRightContent","frzCont","getFrozenMode","ColumnVirtualFreezeRenderer","VirtualTreeFreezeHdrRenderer","rfshMovable","VirtualFreezeHdrRenderer","Freeze","FreezeColumn","dblClickHandler","instantiateRenderer","FreezeRender","ColumnFreezeHeaderRenderer","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","collapseExpandInfinitechilds","rowRenderer","RowRenderer","childRowObjects","childRowElements","infiniteParents","actions","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger","index.InfiniteScroll"],"mappings":"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"}