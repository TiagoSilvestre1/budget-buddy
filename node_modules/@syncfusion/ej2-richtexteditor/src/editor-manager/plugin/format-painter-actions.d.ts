import { IFormatPainterSettings } from '../base';
import { EditorManager } from '../base';
export declare class FormatPainterActions {
    private parent;
    private copyCollection;
    private deniedFormatsCollection;
    private newElem;
    private newElemLastChild;
    private settings;
    constructor(parent?: EditorManager, options?: IFormatPainterSettings);
    private addEventListener;
    private actionHandler;
    private generateElement;
    private pasteAction;
    private removeDeniedFormats;
    private copyAction;
    private getRangeParentElem;
    private getNearestBlockParentElement;
    private isBlockElement;
    private escapeAction;
    private paintPlainTextFormat;
    private validateELementTag;
    private findCurrentContext;
    private insertFormatNode;
    private insertBlockNode;
    private cleanEmptyLists;
    private setDeniedFormats;
    private makeDeniedFormatsCollection;
}
/**
 * @hidden
 */
export interface FormatPainterCollection {
    attrs: Attr[];
    className: string;
    styles: CSSPropCollection[];
    tagName: string;
}
/**
 * @hidden
 *
 */
export interface FormatPainterValue {
    element: HTMLElement;
    lastChild: HTMLElement;
}
/**
 * @hidden
 */
export interface DeniedFormatsCollection {
    tag: string;
    styles: string[];
    attributes: string[];
    classes: string[];
}
/**
 * @hidden
 */
export interface CSSPropCollection {
    property: string;
    value: string;
    priority: string;
}
